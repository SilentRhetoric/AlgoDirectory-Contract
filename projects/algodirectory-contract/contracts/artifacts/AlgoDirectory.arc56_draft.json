{
  "name": "AlgoDirectory",
  "desc": "A decentralized, on-chain directory for the Algorand ecosystem",
  "methods": [
    {
      "name": "createListing",
      "desc": "Creates a listing in the directory by vouching for an NFD root or segment of directory.algo",
      "args": [
        {
          "name": "collateralPayment",
          "type": "pay",
          "desc": "The Algo payment transaction of collateral to vouch for the listing"
        },
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be listed"
        },
        {
          "name": "listingTags",
          "type": "byte[13]",
          "desc": "An array of 13 bytes with each representing a tag for the listing"
        }
      ],
      "returns": {
        "type": "(uint64,uint64,uint64,byte[13],string)",
        "struct": "Listing"
      },
      "events": [
        {
          "name": "CreateListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the createListing method that\ncontains the listing which was created for an NFD segment of directory.algo"
        }
      ],
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "refreshListing",
      "desc": "Refreshes a listing in the directory and updates its last touched timestamp",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be refreshed"
        },
        {
          "name": "listingTags",
          "type": "byte[13]",
          "desc": "An array of 13 bytes with each representing a tag; used to update the tags of the listing, if no tags are to be updated, pass the existing tags"
        }
      ],
      "returns": {
        "type": "(uint64,uint64,uint64,byte[13],string)",
        "struct": "Listing"
      },
      "events": [
        {
          "name": "RefreshListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the refreshListing method that\ncontains the listing which was refreshed"
        }
      ],
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "abandonListing",
      "desc": "Abandons a listing in the directory and returns the vouched collateral",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be abandoned"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "AbandonListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the abandonListing method that\ncontains the listing which was abandoned"
        }
      ],
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "removeTransferredListing",
      "desc": "Removes a listing for which the NFD has been transferred.\nAnyone can call this to clean up a listing that is no longer valid.",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be removed"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "RemoveTransferredListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the removeTransferredListing method that\ncontains the listing which was removed after the NFD was transferred"
        }
      ],
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "deleteListingWithPenalty",
      "desc": "Deletes a listing from the directory & sends the collateral to the fee sink",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be deleted"
        }
      ],
      "returns": {
        "type": "string"
      },
      "events": [
        {
          "name": "DeleteListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the deleteListing method that\ncontains the listing which was deleted by an admin for inappropriate content"
        }
      ],
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "setAdminToken",
      "desc": "Stores an ASA ID in global state that will control listing admin rights",
      "args": [
        {
          "name": "asaID",
          "type": "uint64",
          "desc": "The Asset ID of the ASA to be the admin token"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": ["NoOp"]
      }
    },
    {
      "name": "updateApplication",
      "desc": "Enables the application to be updated by the creator or update token holder",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": ["UpdateApplication"]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": ["NoOp"],
        "call": []
      }
    }
  ],
  "events": [
    {
      "name": "CreateListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the createListing method that\ncontains the listing which was created for an NFD segment of directory.algo"
    },
    {
      "name": "RefreshListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the refreshListing method that\ncontains the listing which was refreshed"
    },
    {
      "name": "AbandonListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the abandonListing method that\ncontains the listing which was abandoned"
    },
    {
      "name": "RemoveTransferredListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the removeTransferredListing method that\ncontains the listing which was removed after the NFD was transferred"
    },
    {
      "name": "DeleteListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the deleteListing method that\ncontains the listing which was deleted by an admin for inappropriate content"
    }
  ],
  "arcs": [4, 56],
  "structs": {
    "Listing": [
      {
        "name": "timestamp",
        "type": "uint64"
      },
      {
        "name": "vouchAmount",
        "type": "uint64"
      },
      {
        "name": "nfdAppID",
        "type": "uint64"
      },
      {
        "name": "tags",
        "type": "byte[13]"
      },
      {
        "name": "name",
        "type": "string"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 32,
        "ints": 32
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "adminToken": {
          "key": "YWRtaW5Ub2tlbg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "listedNFDappIDs": {
          "keyType": "uint64",
          "valueType": "Listing"
        },
        "listings": {
          "keyType": "Listing",
          "valueType": "address"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 15,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1, 2]
        },
        {
          "teal": 16,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [3]
        },
        {
          "teal": 17,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [4, 5]
        },
        {
          "teal": 18,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [6]
        },
        {
          "teal": 19,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [7, 8]
        },
        {
          "teal": 20,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [9]
        },
        {
          "teal": 21,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
        },
        {
          "teal": 25,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [36]
        },
        {
          "teal": 29,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [37, 38, 39]
        },
        {
          "teal": 32,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [40]
        },
        {
          "teal": 36,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "pc": [41, 42]
        },
        {
          "teal": 37,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "pc": [43]
        },
        {
          "teal": 38,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "pc": [44, 45]
        },
        {
          "teal": 42,
          "source": "contracts/AlgoDirectory.algo.ts:39",
          "pc": [46, 47]
        },
        {
          "teal": 43,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "pc": [48, 49]
        },
        {
          "teal": 44,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "pc": [50]
        },
        {
          "teal": 47,
          "source": "contracts/AlgoDirectory.algo.ts:38",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [51]
        },
        {
          "teal": 48,
          "source": "contracts/AlgoDirectory.algo.ts:39",
          "pc": [52]
        },
        {
          "teal": 51,
          "source": "contracts/AlgoDirectory.algo.ts:39",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [53]
        },
        {
          "teal": 52,
          "source": "contracts/AlgoDirectory.algo.ts:39",
          "pc": [54]
        },
        {
          "teal": 55,
          "source": "contracts/AlgoDirectory.algo.ts:39",
          "errorMessage": "Caller must be listing owner",
          "pc": [55]
        },
        {
          "teal": 56,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [56]
        },
        {
          "teal": 60,
          "source": "contracts/AlgoDirectory.algo.ts:42",
          "pc": [57, 58, 59]
        },
        {
          "teal": 67,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [60, 61]
        },
        {
          "teal": 68,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76]
        },
        {
          "teal": 69,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [77]
        },
        {
          "teal": 72,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.parentAppID')",
          "pc": [78]
        },
        {
          "teal": 73,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [79]
        },
        {
          "teal": 74,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [80, 81]
        },
        {
          "teal": 75,
          "source": "contracts/AlgoDirectory.algo.ts:45",
          "pc": [82]
        },
        {
          "teal": 78,
          "source": "contracts/AlgoDirectory.algo.ts:44",
          "errorMessage": "NFD must be a segment of directory.algo",
          "pc": [83]
        },
        {
          "teal": 79,
          "source": "contracts/AlgoDirectory.algo.ts:42",
          "pc": [84]
        },
        {
          "teal": 83,
          "source": "contracts/AlgoDirectory.algo.ts:50",
          "pc": [85, 86, 87]
        },
        {
          "teal": 90,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "pc": [88, 89]
        },
        {
          "teal": 91,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "pc": [90, 91]
        },
        {
          "teal": 92,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "pc": [92, 93]
        },
        {
          "teal": 93,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "pc": [94]
        },
        {
          "teal": 96,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.owner.a')",
          "pc": [95]
        },
        {
          "teal": 97,
          "source": "contracts/AlgoDirectory.algo.ts:53",
          "pc": [96]
        },
        {
          "teal": 100,
          "source": "contracts/AlgoDirectory.algo.ts:52",
          "errorMessage": "Listing creator must be the NFD app i.owner.a",
          "pc": [97]
        },
        {
          "teal": 101,
          "source": "contracts/AlgoDirectory.algo.ts:50",
          "pc": [98]
        },
        {
          "teal": 105,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [99, 100, 101]
        },
        {
          "teal": 108,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [102]
        },
        {
          "teal": 109,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [103, 104]
        },
        {
          "teal": 113,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "pc": [105, 106]
        },
        {
          "teal": 114,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "pc": [107]
        },
        {
          "teal": 115,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "pc": [108, 109]
        },
        {
          "teal": 119,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "pc": [110, 111]
        },
        {
          "teal": 120,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "pc": [112]
        },
        {
          "teal": 123,
          "source": "contracts/AlgoDirectory.algo.ts:60",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [113]
        },
        {
          "teal": 124,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [114]
        },
        {
          "teal": 127,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [115]
        },
        {
          "teal": 128,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [116, 117]
        },
        {
          "teal": 132,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [118, 119]
        },
        {
          "teal": 133,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [120, 121]
        },
        {
          "teal": 134,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [122]
        },
        {
          "teal": 137,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.owner.a')",
          "pc": [123]
        },
        {
          "teal": 138,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [124, 125]
        },
        {
          "teal": 142,
          "source": "contracts/AlgoDirectory.algo.ts:65",
          "pc": [126, 127]
        },
        {
          "teal": 143,
          "source": "contracts/AlgoDirectory.algo.ts:65",
          "pc": [128, 129]
        },
        {
          "teal": 144,
          "source": "contracts/AlgoDirectory.algo.ts:65",
          "pc": [130]
        },
        {
          "teal": 147,
          "source": "contracts/AlgoDirectory.algo.ts:65",
          "errorMessage": "NFD owner must be different than the listing owner",
          "pc": [131]
        },
        {
          "teal": 148,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [132]
        },
        {
          "teal": 152,
          "source": "contracts/AlgoDirectory.algo.ts:68",
          "pc": [133, 134, 135]
        },
        {
          "teal": 159,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [136, 137]
        },
        {
          "teal": 160,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [138, 139]
        },
        {
          "teal": 161,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157]
        },
        {
          "teal": 162,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [158]
        },
        {
          "teal": 165,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.expirationTime')",
          "pc": [159]
        },
        {
          "teal": 166,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [160]
        },
        {
          "teal": 167,
          "source": "contracts/AlgoDirectory.algo.ts:72",
          "pc": [161]
        },
        {
          "teal": 170,
          "source": "contracts/AlgoDirectory.algo.ts:71",
          "errorMessage": "NFD segment must not be expired",
          "pc": [162]
        },
        {
          "teal": 171,
          "source": "contracts/AlgoDirectory.algo.ts:68",
          "pc": [163]
        },
        {
          "teal": 175,
          "source": "contracts/AlgoDirectory.algo.ts:77",
          "pc": [164, 165, 166]
        },
        {
          "teal": 179,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [167, 168]
        },
        {
          "teal": 180,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179]
        },
        {
          "teal": 181,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [180]
        },
        {
          "teal": 182,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [181]
        },
        {
          "teal": 183,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [182]
        },
        {
          "teal": 184,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "pc": [183]
        },
        {
          "teal": 187,
          "source": "contracts/AlgoDirectory.algo.ts:80",
          "errorMessage": "NFD segment must not be listed for sale",
          "pc": [184]
        },
        {
          "teal": 188,
          "source": "contracts/AlgoDirectory.algo.ts:77",
          "pc": [185]
        },
        {
          "teal": 192,
          "source": "contracts/AlgoDirectory.algo.ts:83",
          "pc": [186, 187, 188]
        },
        {
          "teal": 196,
          "source": "contracts/AlgoDirectory.algo.ts:84",
          "pc": [189, 190]
        },
        {
          "teal": 197,
          "source": "contracts/AlgoDirectory.algo.ts:84",
          "pc": [191]
        },
        {
          "teal": 198,
          "source": "contracts/AlgoDirectory.algo.ts:84",
          "pc": [192, 193, 194]
        },
        {
          "teal": 199,
          "source": "contracts/AlgoDirectory.algo.ts:84",
          "pc": [195, 196]
        },
        {
          "teal": 200,
          "source": "contracts/AlgoDirectory.algo.ts:84",
          "pc": [197]
        },
        {
          "teal": 201,
          "source": "contracts/AlgoDirectory.algo.ts:83",
          "pc": [198]
        },
        {
          "teal": 206,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [199]
        },
        {
          "teal": 209,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [200, 201, 202]
        },
        {
          "teal": 210,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [203]
        },
        {
          "teal": 211,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [204]
        },
        {
          "teal": 212,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [205, 206]
        },
        {
          "teal": 213,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [207]
        },
        {
          "teal": 216,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "errorMessage": "argument 0 (listingTags) for createListing must be a byte[13]",
          "pc": [208]
        },
        {
          "teal": 219,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [209, 210, 211]
        },
        {
          "teal": 220,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [212]
        },
        {
          "teal": 223,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [213, 214]
        },
        {
          "teal": 224,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [215]
        },
        {
          "teal": 225,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [216]
        },
        {
          "teal": 226,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [217]
        },
        {
          "teal": 227,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [218, 219]
        },
        {
          "teal": 228,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [220]
        },
        {
          "teal": 229,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [221]
        },
        {
          "teal": 232,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "errorMessage": "argument 2 (collateralPayment) for createListing must be a pay transaction",
          "pc": [222]
        },
        {
          "teal": 235,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [223, 224, 225]
        },
        {
          "teal": 236,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [226]
        },
        {
          "teal": 237,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [227]
        },
        {
          "teal": 238,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [228]
        },
        {
          "teal": 239,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [229]
        },
        {
          "teal": 249,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [230, 231, 232]
        },
        {
          "teal": 252,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [233]
        },
        {
          "teal": 253,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [234, 235]
        },
        {
          "teal": 262,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [236, 237]
        },
        {
          "teal": 263,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "pc": [238, 239]
        },
        {
          "teal": 264,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "pc": [240, 241]
        },
        {
          "teal": 265,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "pc": [242]
        },
        {
          "teal": 268,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}",
          "pc": [243]
        },
        {
          "teal": 271,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [244, 245]
        },
        {
          "teal": 272,
          "source": "contracts/AlgoDirectory.algo.ts:106",
          "pc": [246, 247]
        },
        {
          "teal": 273,
          "source": "contracts/AlgoDirectory.algo.ts:106",
          "pc": [248, 249]
        },
        {
          "teal": 274,
          "source": "contracts/AlgoDirectory.algo.ts:106",
          "pc": [250]
        },
        {
          "teal": 277,
          "source": "contracts/AlgoDirectory.algo.ts:106",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
          "pc": [251]
        },
        {
          "teal": 280,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [252, 253]
        },
        {
          "teal": 281,
          "source": "contracts/AlgoDirectory.algo.ts:107",
          "pc": [254, 255]
        },
        {
          "teal": 282,
          "source": "contracts/AlgoDirectory.algo.ts:13",
          "pc": [256, 257, 258, 259]
        },
        {
          "teal": 283,
          "source": "contracts/AlgoDirectory.algo.ts:107",
          "pc": [260]
        },
        {
          "teal": 286,
          "source": "contracts/AlgoDirectory.algo.ts:107",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=TOTAL_LISTING_BOXES_COST\"}",
          "pc": [261]
        },
        {
          "teal": 290,
          "source": "contracts/AlgoDirectory.algo.ts:111",
          "pc": [262, 263]
        },
        {
          "teal": 291,
          "source": "contracts/AlgoDirectory.algo.ts:111",
          "pc": [264, 265, 266]
        },
        {
          "teal": 295,
          "source": "contracts/AlgoDirectory.algo.ts:112",
          "pc": [267, 268]
        },
        {
          "teal": 296,
          "source": "contracts/AlgoDirectory.algo.ts:112",
          "pc": [269, 270, 271]
        },
        {
          "teal": 300,
          "source": "contracts/AlgoDirectory.algo.ts:113",
          "pc": [272, 273]
        },
        {
          "teal": 301,
          "source": "contracts/AlgoDirectory.algo.ts:113",
          "pc": [274, 275, 276]
        },
        {
          "teal": 305,
          "source": "contracts/AlgoDirectory.algo.ts:114",
          "pc": [277, 278]
        },
        {
          "teal": 306,
          "source": "contracts/AlgoDirectory.algo.ts:114",
          "pc": [279, 280, 281]
        },
        {
          "teal": 310,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [282, 283]
        },
        {
          "teal": 311,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [284, 285, 286, 287, 288, 289, 290, 291]
        },
        {
          "teal": 312,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [292]
        },
        {
          "teal": 315,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.name')",
          "pc": [293]
        },
        {
          "teal": 316,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [294, 295]
        },
        {
          "teal": 324,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [296]
        },
        {
          "teal": 325,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [297, 298]
        },
        {
          "teal": 326,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [299, 300]
        },
        {
          "teal": 330,
          "source": "contracts/AlgoDirectory.algo.ts:120",
          "pc": [301, 302]
        },
        {
          "teal": 331,
          "source": "contracts/AlgoDirectory.algo.ts:120",
          "pc": [303, 304]
        },
        {
          "teal": 335,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324]
        },
        {
          "teal": 336,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [325, 326]
        },
        {
          "teal": 337,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [327, 328]
        },
        {
          "teal": 338,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [329, 330]
        },
        {
          "teal": 339,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [331, 332]
        },
        {
          "teal": 340,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [333]
        },
        {
          "teal": 341,
          "source": "contracts/AlgoDirectory.algo.ts:121",
          "pc": [334, 335]
        },
        {
          "teal": 345,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [336]
        },
        {
          "teal": 346,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [337, 338]
        },
        {
          "teal": 349,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [339]
        },
        {
          "teal": 353,
          "source": "contracts/AlgoDirectory.algo.ts:124",
          "pc": [340, 341]
        },
        {
          "teal": 354,
          "source": "contracts/AlgoDirectory.algo.ts:124",
          "pc": [342]
        },
        {
          "teal": 355,
          "source": "contracts/AlgoDirectory.algo.ts:124",
          "pc": [343]
        },
        {
          "teal": 356,
          "source": "contracts/AlgoDirectory.algo.ts:124",
          "pc": [344]
        },
        {
          "teal": 359,
          "source": "contracts/AlgoDirectory.algo.ts:124",
          "errorMessage": "NFD app ID must be valid at the NFD registry",
          "pc": [345]
        },
        {
          "teal": 363,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [346, 347]
        },
        {
          "teal": 364,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [348]
        },
        {
          "teal": 365,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [349]
        },
        {
          "teal": 366,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [350]
        },
        {
          "teal": 367,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [351]
        },
        {
          "teal": 368,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "pc": [352]
        },
        {
          "teal": 371,
          "source": "contracts/AlgoDirectory.algo.ts:127",
          "errorMessage": "Listing for this NFD must not already exist",
          "pc": [353]
        },
        {
          "teal": 375,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [354, 355]
        },
        {
          "teal": 376,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [356]
        },
        {
          "teal": 377,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [357, 358]
        },
        {
          "teal": 378,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [359]
        },
        {
          "teal": 379,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [360, 361]
        },
        {
          "teal": 380,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [362]
        },
        {
          "teal": 381,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [363]
        },
        {
          "teal": 382,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [364, 365]
        },
        {
          "teal": 392,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [366]
        },
        {
          "teal": 393,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [367]
        },
        {
          "teal": 394,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [368, 369]
        },
        {
          "teal": 395,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [370, 371, 372]
        },
        {
          "teal": 396,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [373]
        },
        {
          "teal": 397,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [374, 375, 376]
        },
        {
          "teal": 398,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [377, 378]
        },
        {
          "teal": 399,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [379, 380]
        },
        {
          "teal": 400,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [381]
        },
        {
          "teal": 401,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [382, 383, 384]
        },
        {
          "teal": 402,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [385, 386]
        },
        {
          "teal": 403,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [387]
        },
        {
          "teal": 404,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [388, 389, 390]
        },
        {
          "teal": 405,
          "source": "contracts/AlgoDirectory.algo.ts:136",
          "pc": [391, 392]
        },
        {
          "teal": 406,
          "source": "contracts/AlgoDirectory.algo.ts:136",
          "pc": [393, 394, 395]
        },
        {
          "teal": 407,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [396, 397]
        },
        {
          "teal": 408,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [398]
        },
        {
          "teal": 409,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [399]
        },
        {
          "teal": 410,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [400]
        },
        {
          "teal": 411,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [401, 402, 403]
        },
        {
          "teal": 412,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [404]
        },
        {
          "teal": 413,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [405]
        },
        {
          "teal": 414,
          "source": "contracts/AlgoDirectory.algo.ts:137",
          "pc": [406, 407, 408]
        },
        {
          "teal": 415,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [409]
        },
        {
          "teal": 416,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [410]
        },
        {
          "teal": 417,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [411, 412]
        },
        {
          "teal": 421,
          "source": "contracts/AlgoDirectory.algo.ts:141",
          "pc": [413, 414]
        },
        {
          "teal": 422,
          "source": "contracts/AlgoDirectory.algo.ts:141",
          "pc": [415, 416]
        },
        {
          "teal": 423,
          "source": "contracts/AlgoDirectory.algo.ts:141",
          "pc": [417]
        },
        {
          "teal": 427,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [418, 419]
        },
        {
          "teal": 428,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [420]
        },
        {
          "teal": 429,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [421]
        },
        {
          "teal": 430,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [422]
        },
        {
          "teal": 431,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [423]
        },
        {
          "teal": 432,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [424, 425]
        },
        {
          "teal": 433,
          "source": "contracts/AlgoDirectory.algo.ts:144",
          "pc": [426]
        },
        {
          "teal": 439,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [427, 428, 429, 430, 431, 432]
        },
        {
          "teal": 440,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [433]
        },
        {
          "teal": 441,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [434]
        },
        {
          "teal": 442,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [435]
        },
        {
          "teal": 443,
          "source": "contracts/AlgoDirectory.algo.ts:148",
          "pc": [436, 437]
        },
        {
          "teal": 444,
          "source": "contracts/AlgoDirectory.algo.ts:148",
          "pc": [438, 439, 440]
        },
        {
          "teal": 445,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [441]
        },
        {
          "teal": 446,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [442]
        },
        {
          "teal": 447,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [443]
        },
        {
          "teal": 448,
          "source": "contracts/AlgoDirectory.algo.ts:147",
          "pc": [444]
        },
        {
          "teal": 452,
          "source": "contracts/AlgoDirectory.algo.ts:151",
          "pc": [445, 446]
        },
        {
          "teal": 455,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [447, 448]
        },
        {
          "teal": 458,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [449, 450]
        },
        {
          "teal": 459,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [451]
        },
        {
          "teal": 464,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [452]
        },
        {
          "teal": 467,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [453, 454, 455]
        },
        {
          "teal": 468,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [456]
        },
        {
          "teal": 469,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [457]
        },
        {
          "teal": 470,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [458, 459]
        },
        {
          "teal": 471,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [460]
        },
        {
          "teal": 474,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "errorMessage": "argument 0 (listingTags) for refreshListing must be a byte[13]",
          "pc": [461]
        },
        {
          "teal": 477,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [462, 463, 464]
        },
        {
          "teal": 478,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [465]
        },
        {
          "teal": 481,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [466, 467, 468]
        },
        {
          "teal": 482,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [469]
        },
        {
          "teal": 483,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [470]
        },
        {
          "teal": 484,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [471]
        },
        {
          "teal": 485,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [472]
        },
        {
          "teal": 494,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [473, 474, 475]
        },
        {
          "teal": 497,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [476]
        },
        {
          "teal": 498,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [477]
        },
        {
          "teal": 502,
          "source": "contracts/AlgoDirectory.algo.ts:174",
          "pc": [478, 479]
        },
        {
          "teal": 503,
          "source": "contracts/AlgoDirectory.algo.ts:174",
          "pc": [480, 481, 482]
        },
        {
          "teal": 507,
          "source": "contracts/AlgoDirectory.algo.ts:175",
          "pc": [483, 484]
        },
        {
          "teal": 508,
          "source": "contracts/AlgoDirectory.algo.ts:175",
          "pc": [485, 486, 487]
        },
        {
          "teal": 512,
          "source": "contracts/AlgoDirectory.algo.ts:176",
          "pc": [488, 489]
        },
        {
          "teal": 513,
          "source": "contracts/AlgoDirectory.algo.ts:176",
          "pc": [490, 491, 492]
        },
        {
          "teal": 517,
          "source": "contracts/AlgoDirectory.algo.ts:177",
          "pc": [493, 494]
        },
        {
          "teal": 518,
          "source": "contracts/AlgoDirectory.algo.ts:177",
          "pc": [495, 496, 497]
        },
        {
          "teal": 522,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [498, 499]
        },
        {
          "teal": 523,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [500]
        },
        {
          "teal": 524,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [501, 502]
        },
        {
          "teal": 534,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [503]
        },
        {
          "teal": 535,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [504]
        },
        {
          "teal": 536,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [505, 506]
        },
        {
          "teal": 537,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [507, 508, 509]
        },
        {
          "teal": 538,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [510]
        },
        {
          "teal": 539,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [511, 512, 513]
        },
        {
          "teal": 540,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [514, 515]
        },
        {
          "teal": 541,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [516]
        },
        {
          "teal": 544,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [517]
        },
        {
          "teal": 545,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [518, 519]
        },
        {
          "teal": 546,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [520, 521]
        },
        {
          "teal": 547,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [522, 523, 524]
        },
        {
          "teal": 548,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [525]
        },
        {
          "teal": 549,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [526]
        },
        {
          "teal": 550,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [527, 528, 529]
        },
        {
          "teal": 551,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [530, 531]
        },
        {
          "teal": 552,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [532]
        },
        {
          "teal": 555,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [533]
        },
        {
          "teal": 556,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [534, 535]
        },
        {
          "teal": 557,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [536, 537]
        },
        {
          "teal": 558,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [538, 539, 540]
        },
        {
          "teal": 559,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [541]
        },
        {
          "teal": 560,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [542]
        },
        {
          "teal": 561,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [543, 544, 545]
        },
        {
          "teal": 562,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [546, 547]
        },
        {
          "teal": 563,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [548, 549, 550]
        },
        {
          "teal": 564,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [551, 552]
        },
        {
          "teal": 565,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [553]
        },
        {
          "teal": 568,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [554]
        },
        {
          "teal": 569,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [555, 556]
        },
        {
          "teal": 570,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [557, 558]
        },
        {
          "teal": 571,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [559, 560]
        },
        {
          "teal": 572,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [561, 562]
        },
        {
          "teal": 573,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [563, 564]
        },
        {
          "teal": 574,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [565]
        },
        {
          "teal": 575,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [566]
        },
        {
          "teal": 576,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [567, 568]
        },
        {
          "teal": 577,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [569]
        },
        {
          "teal": 578,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [570]
        },
        {
          "teal": 579,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [571]
        },
        {
          "teal": 580,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [572]
        },
        {
          "teal": 581,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [573]
        },
        {
          "teal": 582,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [574]
        },
        {
          "teal": 583,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [575]
        },
        {
          "teal": 584,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [576, 577, 578]
        },
        {
          "teal": 585,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [579]
        },
        {
          "teal": 586,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [580]
        },
        {
          "teal": 587,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [581]
        },
        {
          "teal": 588,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [582, 583, 584]
        },
        {
          "teal": 589,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [585]
        },
        {
          "teal": 590,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [586]
        },
        {
          "teal": 591,
          "source": "contracts/AlgoDirectory.algo.ts:186",
          "pc": [587, 588, 589]
        },
        {
          "teal": 592,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [590]
        },
        {
          "teal": 593,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [591]
        },
        {
          "teal": 594,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [592, 593]
        },
        {
          "teal": 598,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [594, 595]
        },
        {
          "teal": 599,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [596]
        },
        {
          "teal": 602,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [597]
        },
        {
          "teal": 603,
          "source": "contracts/AlgoDirectory.algo.ts:190",
          "pc": [598]
        },
        {
          "teal": 607,
          "source": "contracts/AlgoDirectory.algo.ts:193",
          "pc": [599, 600]
        },
        {
          "teal": 608,
          "source": "contracts/AlgoDirectory.algo.ts:193",
          "pc": [601, 602]
        },
        {
          "teal": 609,
          "source": "contracts/AlgoDirectory.algo.ts:193",
          "pc": [603]
        },
        {
          "teal": 613,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [604, 605]
        },
        {
          "teal": 614,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [606]
        },
        {
          "teal": 615,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [607]
        },
        {
          "teal": 616,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [608]
        },
        {
          "teal": 617,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [609]
        },
        {
          "teal": 618,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [610, 611]
        },
        {
          "teal": 619,
          "source": "contracts/AlgoDirectory.algo.ts:196",
          "pc": [612]
        },
        {
          "teal": 625,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [613, 614, 615, 616, 617, 618]
        },
        {
          "teal": 626,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [619]
        },
        {
          "teal": 627,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [620]
        },
        {
          "teal": 628,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [621]
        },
        {
          "teal": 629,
          "source": "contracts/AlgoDirectory.algo.ts:200",
          "pc": [622, 623]
        },
        {
          "teal": 630,
          "source": "contracts/AlgoDirectory.algo.ts:200",
          "pc": [624, 625, 626]
        },
        {
          "teal": 631,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [627]
        },
        {
          "teal": 632,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [628]
        },
        {
          "teal": 633,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [629]
        },
        {
          "teal": 634,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [630]
        },
        {
          "teal": 638,
          "source": "contracts/AlgoDirectory.algo.ts:203",
          "pc": [631, 632]
        },
        {
          "teal": 641,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [633, 634]
        },
        {
          "teal": 644,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [635, 636]
        },
        {
          "teal": 645,
          "source": "contracts/AlgoDirectory.algo.ts:168",
          "pc": [637]
        },
        {
          "teal": 650,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [638, 639, 640]
        },
        {
          "teal": 651,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [641]
        },
        {
          "teal": 654,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [642, 643, 644]
        },
        {
          "teal": 655,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [645]
        },
        {
          "teal": 656,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [646]
        },
        {
          "teal": 664,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [647, 648, 649]
        },
        {
          "teal": 667,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [650]
        },
        {
          "teal": 671,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [651, 652]
        },
        {
          "teal": 672,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [653]
        },
        {
          "teal": 673,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [654, 655]
        },
        {
          "teal": 677,
          "source": "contracts/AlgoDirectory.algo.ts:224",
          "pc": [656, 657]
        },
        {
          "teal": 678,
          "source": "contracts/AlgoDirectory.algo.ts:224",
          "pc": [658, 659, 660]
        },
        {
          "teal": 687,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [661]
        },
        {
          "teal": 688,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [662]
        },
        {
          "teal": 689,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [663, 664]
        },
        {
          "teal": 693,
          "source": "contracts/AlgoDirectory.algo.ts:228",
          "pc": [665, 666]
        },
        {
          "teal": 694,
          "source": "contracts/AlgoDirectory.algo.ts:228",
          "pc": [667, 668]
        },
        {
          "teal": 698,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [669, 670]
        },
        {
          "teal": 699,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [671]
        },
        {
          "teal": 702,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [672]
        },
        {
          "teal": 703,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [673]
        },
        {
          "teal": 706,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [674]
        },
        {
          "teal": 707,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [675, 676]
        },
        {
          "teal": 711,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [677, 678]
        },
        {
          "teal": 712,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [679]
        },
        {
          "teal": 715,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [680]
        },
        {
          "teal": 716,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [681, 682]
        },
        {
          "teal": 717,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [683, 684]
        },
        {
          "teal": 718,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [685, 686, 687]
        },
        {
          "teal": 719,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [688]
        },
        {
          "teal": 720,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [689, 690]
        },
        {
          "teal": 724,
          "source": "contracts/AlgoDirectory.algo.ts:231",
          "pc": [691]
        },
        {
          "teal": 725,
          "source": "contracts/AlgoDirectory.algo.ts:231",
          "pc": [692, 693]
        },
        {
          "teal": 728,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [694]
        },
        {
          "teal": 734,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [695, 696, 697, 698, 699, 700]
        },
        {
          "teal": 735,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [701]
        },
        {
          "teal": 736,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [702]
        },
        {
          "teal": 737,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [703]
        },
        {
          "teal": 738,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [704, 705]
        },
        {
          "teal": 739,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [706]
        },
        {
          "teal": 742,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [707]
        },
        {
          "teal": 743,
          "source": "contracts/AlgoDirectory.algo.ts:236",
          "pc": [708, 709, 710]
        },
        {
          "teal": 744,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [711]
        },
        {
          "teal": 745,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [712]
        },
        {
          "teal": 746,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [713]
        },
        {
          "teal": 747,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [714]
        },
        {
          "teal": 751,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [715, 716]
        },
        {
          "teal": 752,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "pc": [717]
        },
        {
          "teal": 755,
          "source": "contracts/AlgoDirectory.algo.ts:219",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [718]
        },
        {
          "teal": 756,
          "source": "contracts/AlgoDirectory.algo.ts:240",
          "pc": [719]
        },
        {
          "teal": 760,
          "source": "contracts/AlgoDirectory.algo.ts:241",
          "pc": [720, 721]
        },
        {
          "teal": 761,
          "source": "contracts/AlgoDirectory.algo.ts:241",
          "pc": [722]
        },
        {
          "teal": 762,
          "source": "contracts/AlgoDirectory.algo.ts:241",
          "pc": [723]
        },
        {
          "teal": 763,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [724]
        },
        {
          "teal": 768,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [725, 726, 727]
        },
        {
          "teal": 769,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [728]
        },
        {
          "teal": 772,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [729, 730, 731]
        },
        {
          "teal": 773,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [732]
        },
        {
          "teal": 774,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [733]
        },
        {
          "teal": 783,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [734, 735, 736]
        },
        {
          "teal": 786,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [737]
        },
        {
          "teal": 790,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [738, 739]
        },
        {
          "teal": 791,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [740]
        },
        {
          "teal": 792,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [741, 742]
        },
        {
          "teal": 796,
          "source": "contracts/AlgoDirectory.algo.ts:261",
          "pc": [743, 744]
        },
        {
          "teal": 797,
          "source": "contracts/AlgoDirectory.algo.ts:261",
          "pc": [745, 746, 747]
        },
        {
          "teal": 806,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [748]
        },
        {
          "teal": 807,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [749]
        },
        {
          "teal": 808,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [750, 751]
        },
        {
          "teal": 812,
          "source": "contracts/AlgoDirectory.algo.ts:265",
          "pc": [752, 753]
        },
        {
          "teal": 813,
          "source": "contracts/AlgoDirectory.algo.ts:265",
          "pc": [754, 755]
        },
        {
          "teal": 817,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [756, 757]
        },
        {
          "teal": 818,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [758]
        },
        {
          "teal": 821,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [759]
        },
        {
          "teal": 822,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [760]
        },
        {
          "teal": 825,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [761]
        },
        {
          "teal": 826,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [762, 763]
        },
        {
          "teal": 830,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [764, 765]
        },
        {
          "teal": 831,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [766]
        },
        {
          "teal": 834,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [767]
        },
        {
          "teal": 835,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [768, 769]
        },
        {
          "teal": 836,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [770, 771]
        },
        {
          "teal": 837,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [772, 773, 774]
        },
        {
          "teal": 838,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [775]
        },
        {
          "teal": 839,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [776, 777]
        },
        {
          "teal": 843,
          "source": "contracts/AlgoDirectory.algo.ts:268",
          "pc": [778]
        },
        {
          "teal": 844,
          "source": "contracts/AlgoDirectory.algo.ts:268",
          "pc": [779, 780]
        },
        {
          "teal": 847,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [781]
        },
        {
          "teal": 853,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [782, 783, 784, 785, 786, 787]
        },
        {
          "teal": 854,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [788]
        },
        {
          "teal": 855,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [789]
        },
        {
          "teal": 856,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [790]
        },
        {
          "teal": 857,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [791, 792]
        },
        {
          "teal": 858,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [793]
        },
        {
          "teal": 861,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [794]
        },
        {
          "teal": 862,
          "source": "contracts/AlgoDirectory.algo.ts:273",
          "pc": [795, 796, 797]
        },
        {
          "teal": 863,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [798]
        },
        {
          "teal": 864,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [799]
        },
        {
          "teal": 865,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [800]
        },
        {
          "teal": 866,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [801]
        },
        {
          "teal": 870,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [802, 803]
        },
        {
          "teal": 871,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "pc": [804]
        },
        {
          "teal": 874,
          "source": "contracts/AlgoDirectory.algo.ts:258",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [805]
        },
        {
          "teal": 875,
          "source": "contracts/AlgoDirectory.algo.ts:277",
          "pc": [806]
        },
        {
          "teal": 879,
          "source": "contracts/AlgoDirectory.algo.ts:278",
          "pc": [807, 808]
        },
        {
          "teal": 880,
          "source": "contracts/AlgoDirectory.algo.ts:278",
          "pc": [809]
        },
        {
          "teal": 881,
          "source": "contracts/AlgoDirectory.algo.ts:278",
          "pc": [810]
        },
        {
          "teal": 882,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [811]
        },
        {
          "teal": 887,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [812]
        },
        {
          "teal": 890,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [813, 814, 815]
        },
        {
          "teal": 891,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [816]
        },
        {
          "teal": 894,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [817, 818, 819]
        },
        {
          "teal": 895,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [820]
        },
        {
          "teal": 896,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [821]
        },
        {
          "teal": 897,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [822]
        },
        {
          "teal": 898,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [823, 824, 825]
        },
        {
          "teal": 899,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [826]
        },
        {
          "teal": 900,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [827]
        },
        {
          "teal": 901,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [828]
        },
        {
          "teal": 902,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [829]
        },
        {
          "teal": 903,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [830]
        },
        {
          "teal": 904,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [831]
        },
        {
          "teal": 912,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [832, 833, 834]
        },
        {
          "teal": 915,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [835]
        },
        {
          "teal": 916,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [836]
        },
        {
          "teal": 920,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [837, 838]
        },
        {
          "teal": 921,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [839]
        },
        {
          "teal": 922,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [840]
        },
        {
          "teal": 923,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [841, 842]
        },
        {
          "teal": 924,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [843]
        },
        {
          "teal": 925,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [844]
        },
        {
          "teal": 926,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "pc": [845]
        },
        {
          "teal": 929,
          "source": "contracts/AlgoDirectory.algo.ts:295",
          "errorMessage": "Caller must have the admin token",
          "pc": [846]
        },
        {
          "teal": 933,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [847, 848]
        },
        {
          "teal": 934,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [849]
        },
        {
          "teal": 935,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [850, 851]
        },
        {
          "teal": 939,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [852, 853, 854, 855, 856, 857, 858, 859, 860]
        },
        {
          "teal": 940,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [861, 862]
        },
        {
          "teal": 941,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [863]
        },
        {
          "teal": 944,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [864]
        },
        {
          "teal": 945,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [865, 866]
        },
        {
          "teal": 946,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [867, 868]
        },
        {
          "teal": 947,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [869, 870]
        },
        {
          "teal": 948,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [871, 872]
        },
        {
          "teal": 949,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [873, 874]
        },
        {
          "teal": 950,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [875]
        },
        {
          "teal": 951,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [876]
        },
        {
          "teal": 952,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [877, 878]
        },
        {
          "teal": 953,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [879]
        },
        {
          "teal": 954,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [880]
        },
        {
          "teal": 955,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [881]
        },
        {
          "teal": 956,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [882]
        },
        {
          "teal": 957,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [883]
        },
        {
          "teal": 958,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [884]
        },
        {
          "teal": 959,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [885]
        },
        {
          "teal": 960,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [886, 887, 888]
        },
        {
          "teal": 961,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [889]
        },
        {
          "teal": 962,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907]
        },
        {
          "teal": 963,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [908]
        },
        {
          "teal": 964,
          "source": "contracts/AlgoDirectory.algo.ts:298",
          "pc": [909, 910]
        },
        {
          "teal": 974,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [911]
        },
        {
          "teal": 975,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [912]
        },
        {
          "teal": 976,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [913, 914]
        },
        {
          "teal": 980,
          "source": "contracts/AlgoDirectory.algo.ts:302",
          "pc": [915, 916]
        },
        {
          "teal": 981,
          "source": "contracts/AlgoDirectory.algo.ts:302",
          "pc": [917, 918]
        },
        {
          "teal": 985,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [919, 920]
        },
        {
          "teal": 986,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [921, 922]
        },
        {
          "teal": 990,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [923, 924]
        },
        {
          "teal": 991,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [925]
        },
        {
          "teal": 994,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [926]
        },
        {
          "teal": 995,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [927, 928]
        },
        {
          "teal": 996,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [929, 930]
        },
        {
          "teal": 997,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [931, 932, 933]
        },
        {
          "teal": 998,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [934]
        },
        {
          "teal": 999,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [935, 936]
        },
        {
          "teal": 1003,
          "source": "contracts/AlgoDirectory.algo.ts:305",
          "pc": [937]
        },
        {
          "teal": 1004,
          "source": "contracts/AlgoDirectory.algo.ts:305",
          "pc": [938, 939]
        },
        {
          "teal": 1008,
          "source": "contracts/AlgoDirectory.algo.ts:306",
          "pc": [940, 941]
        },
        {
          "teal": 1009,
          "source": "contracts/AlgoDirectory.algo.ts:306",
          "pc": [942, 943]
        },
        {
          "teal": 1012,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [944]
        },
        {
          "teal": 1018,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [945, 946, 947, 948, 949, 950]
        },
        {
          "teal": 1019,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [951]
        },
        {
          "teal": 1020,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [952]
        },
        {
          "teal": 1021,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [953]
        },
        {
          "teal": 1022,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [954, 955]
        },
        {
          "teal": 1023,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [956]
        },
        {
          "teal": 1026,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [957]
        },
        {
          "teal": 1027,
          "source": "contracts/AlgoDirectory.algo.ts:311",
          "pc": [958, 959, 960]
        },
        {
          "teal": 1028,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [961]
        },
        {
          "teal": 1029,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [962]
        },
        {
          "teal": 1030,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [963]
        },
        {
          "teal": 1031,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [964]
        },
        {
          "teal": 1035,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [965, 966]
        },
        {
          "teal": 1036,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [967]
        },
        {
          "teal": 1039,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [968]
        },
        {
          "teal": 1040,
          "source": "contracts/AlgoDirectory.algo.ts:315",
          "pc": [969]
        },
        {
          "teal": 1044,
          "source": "contracts/AlgoDirectory.algo.ts:316",
          "pc": [970, 971]
        },
        {
          "teal": 1045,
          "source": "contracts/AlgoDirectory.algo.ts:316",
          "pc": [972]
        },
        {
          "teal": 1046,
          "source": "contracts/AlgoDirectory.algo.ts:316",
          "pc": [973]
        },
        {
          "teal": 1050,
          "source": "contracts/AlgoDirectory.algo.ts:318",
          "pc": [974, 975]
        },
        {
          "teal": 1053,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [976, 977]
        },
        {
          "teal": 1056,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [978, 979]
        },
        {
          "teal": 1057,
          "source": "contracts/AlgoDirectory.algo.ts:293",
          "pc": [980]
        },
        {
          "teal": 1062,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [981, 982, 983]
        },
        {
          "teal": 1063,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [984]
        },
        {
          "teal": 1066,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [985, 986, 987]
        },
        {
          "teal": 1067,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [988]
        },
        {
          "teal": 1068,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [989]
        },
        {
          "teal": 1076,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [990, 991, 992]
        },
        {
          "teal": 1083,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [993, 994]
        },
        {
          "teal": 1084,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [995, 996, 997]
        },
        {
          "teal": 1085,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [998, 999]
        },
        {
          "teal": 1086,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1000]
        },
        {
          "teal": 1087,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1001]
        },
        {
          "teal": 1088,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1002]
        },
        {
          "teal": 1089,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1003, 1004, 1005]
        },
        {
          "teal": 1090,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1006, 1007]
        },
        {
          "teal": 1091,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1008]
        },
        {
          "teal": 1092,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1009, 1010]
        },
        {
          "teal": 1093,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1011]
        },
        {
          "teal": 1094,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1012]
        },
        {
          "teal": 1095,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1013]
        },
        {
          "teal": 1096,
          "source": "contracts/AlgoDirectory.algo.ts:328",
          "pc": [1014]
        },
        {
          "teal": 1100,
          "source": "contracts/AlgoDirectory.algo.ts:327",
          "errorMessage": "Only the creator or holder of the update token can set the admin token",
          "pc": [1015]
        },
        {
          "teal": 1104,
          "source": "contracts/AlgoDirectory.algo.ts:331",
          "pc": [1016]
        },
        {
          "teal": 1105,
          "source": "contracts/AlgoDirectory.algo.ts:331",
          "pc": [1017, 1018]
        },
        {
          "teal": 1106,
          "source": "contracts/AlgoDirectory.algo.ts:331",
          "pc": [1019]
        },
        {
          "teal": 1107,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [1020]
        },
        {
          "teal": 1112,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [1021, 1022, 1023]
        },
        {
          "teal": 1113,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [1024]
        },
        {
          "teal": 1114,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [1025]
        },
        {
          "teal": 1120,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [1026, 1027, 1028]
        },
        {
          "teal": 1127,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1029, 1030]
        },
        {
          "teal": 1128,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1031, 1032, 1033]
        },
        {
          "teal": 1129,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1034, 1035]
        },
        {
          "teal": 1130,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1036]
        },
        {
          "teal": 1131,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1037]
        },
        {
          "teal": 1132,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1038]
        },
        {
          "teal": 1133,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1039, 1040, 1041]
        },
        {
          "teal": 1134,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1042, 1043]
        },
        {
          "teal": 1135,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1044]
        },
        {
          "teal": 1136,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1045, 1046]
        },
        {
          "teal": 1137,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1047]
        },
        {
          "teal": 1138,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1048]
        },
        {
          "teal": 1139,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1049]
        },
        {
          "teal": 1140,
          "source": "contracts/AlgoDirectory.algo.ts:340",
          "pc": [1050]
        },
        {
          "teal": 1144,
          "source": "contracts/AlgoDirectory.algo.ts:339",
          "errorMessage": "Only the creator or holder of the update token can update the application",
          "pc": [1051]
        },
        {
          "teal": 1145,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [1052]
        },
        {
          "teal": 1150,
          "source": "contracts/AlgoDirectory.algo.ts:345",
          "pc": [1053, 1054, 1055]
        },
        {
          "teal": 1151,
          "source": "contracts/AlgoDirectory.algo.ts:345",
          "pc": [1056]
        },
        {
          "teal": 1152,
          "source": "contracts/AlgoDirectory.algo.ts:345",
          "pc": [1057]
        },
        {
          "teal": 1156,
          "source": "contracts/AlgoDirectory.algo.ts:345",
          "pc": [1058, 1059, 1060]
        },
        {
          "teal": 1157,
          "source": "contracts/AlgoDirectory.algo.ts:345",
          "pc": [1061]
        },
        {
          "teal": 1160,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1062, 1063, 1064, 1065, 1066, 1067]
        },
        {
          "teal": 1161,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1068, 1069, 1070]
        },
        {
          "teal": 1162,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1071, 1072, 1073, 1074]
        },
        {
          "teal": 1165,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [1075]
        },
        {
          "teal": 1168,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1076, 1077, 1078, 1079, 1080, 1081]
        },
        {
          "teal": 1169,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1082, 1083, 1084, 1085, 1086, 1087]
        },
        {
          "teal": 1170,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1088, 1089, 1090, 1091, 1092, 1093]
        },
        {
          "teal": 1171,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1094, 1095, 1096, 1097, 1098, 1099]
        },
        {
          "teal": 1172,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1100, 1101, 1102, 1103, 1104, 1105]
        },
        {
          "teal": 1173,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1106, 1107, 1108, 1109, 1110, 1111]
        },
        {
          "teal": 1174,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1112, 1113, 1114]
        },
        {
          "teal": 1175,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128]
        },
        {
          "teal": 1178,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [1129]
        },
        {
          "teal": 1181,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1130, 1131, 1132, 1133, 1134, 1135]
        },
        {
          "teal": 1182,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1136, 1137, 1138]
        },
        {
          "teal": 1183,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1139, 1140, 1141, 1142]
        },
        {
          "teal": 1186,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for call UpdateApplication",
          "pc": [1143]
        },
        {
          "teal": 1189,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1144, 1145, 1146]
        },
        {
          "teal": 1190,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1147, 1148]
        },
        {
          "teal": 1191,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1149, 1150]
        },
        {
          "teal": 1192,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1151]
        },
        {
          "teal": 1193,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1152, 1153]
        },
        {
          "teal": 1194,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1154, 1155]
        },
        {
          "teal": 1195,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1156]
        },
        {
          "teal": 1198,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1157, 1158, 1159]
        },
        {
          "teal": 1199,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1160, 1161]
        },
        {
          "teal": 1200,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1162, 1163]
        },
        {
          "teal": 1201,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1164]
        },
        {
          "teal": 1202,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1165, 1166]
        },
        {
          "teal": 1203,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1167, 1168]
        },
        {
          "teal": 1204,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1169]
        },
        {
          "teal": 1205,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1170]
        },
        {
          "teal": 1206,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1171, 1172]
        },
        {
          "teal": 1207,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1173]
        },
        {
          "teal": 1208,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1174]
        },
        {
          "teal": 1209,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1175]
        },
        {
          "teal": 1210,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1176, 1177, 1178]
        },
        {
          "teal": 1211,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1179, 1180]
        },
        {
          "teal": 1212,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1181, 1182]
        },
        {
          "teal": 1213,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1183]
        },
        {
          "teal": 1214,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1184]
        },
        {
          "teal": 1215,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1185, 1186]
        },
        {
          "teal": 1216,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1187, 1188]
        },
        {
          "teal": 1217,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1189, 1190]
        },
        {
          "teal": 1218,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1191, 1192]
        },
        {
          "teal": 1219,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [1193]
        }
      ],
      "pcOffsetMethod": "cblocks"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "feeSinkAddress": {
      "type": "address"
    },
    "directoryAppID": {
      "type": "uint64"
    },
    "nfdRegistryAppID": {
      "type": "uint64"
    },
    "updateToken": {
      "type": "uint64"
    }
  },
  "scratchVariables": {
    "feeSinkAddress": {
      "type": "address",
      "slot": 200
    },
    "directoryAppID": {
      "type": "uint64",
      "slot": 201
    },
    "nfdRegistryAppID": {
      "type": "uint64",
      "slot": 202
    },
    "updateToken": {
      "type": "uint64",
      "slot": 203
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}
