{
  "name": "AlgoDirectory",
  "desc": "",
  "methods": [
    {
      "name": "createListing",
      "desc": "Creates a listing in the directory by vouching for an NFD root or segment of directory.algo",
      "args": [
        {
          "name": "collateralPayment",
          "type": "pay",
          "desc": "The Algo payment transaction of collateral to vouch for the listing"
        },
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be listed"
        },
        {
          "name": "listingTags",
          "type": "byte[13]",
          "desc": "An array of 13 bytes with each representing a tag for the listing"
        }
      ],
      "returns": {
        "type": "(uint64,uint64,uint64,byte[13],string)",
        "struct": "Listing"
      },
      "events": [
        {
          "name": "CreateListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the createListing method that\ncontains the listing which was created for an NFD segment of directory.algo"
        }
      ],
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "refreshListing",
      "desc": "Refreshes a listing in the directory and updates its last touched timestamp",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be refreshed"
        },
        {
          "name": "listingTags",
          "type": "byte[13]",
          "desc": "An array of 13 bytes with each representing a tag; used to update the tags of the listing, if no tags are to be updated, pass the existing tags"
        }
      ],
      "returns": {
        "type": "(uint64,uint64,uint64,byte[13],string)",
        "struct": "Listing"
      },
      "events": [
        {
          "name": "RefreshListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the refreshListing method that\ncontains the listing which was refreshed"
        }
      ],
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "abandonListing",
      "desc": "Abandons a listing in the directory and returns the vouched collateral",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be abandoned"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "AbandonListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the abandonListing method that\ncontains the listing which was abandoned"
        }
      ],
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "removeTransferredListing",
      "desc": "Removes a listing for which the NFD has been transferred.\nAnyone can call this to clean up a listing that is no longer valid.",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be removed"
        }
      ],
      "returns": {
        "type": "void"
      },
      "events": [
        {
          "name": "RemoveTransferredListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the removeTransferredListing method that\ncontains the listing which was removed after the NFD was transferred"
        }
      ],
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "deleteListingWithPenalty",
      "desc": "Deletes a listing from the directory & sends the collateral to the fee sink",
      "args": [
        {
          "name": "nfdAppID",
          "type": "uint64",
          "desc": "The Application ID of the NFD that will be deleted"
        }
      ],
      "returns": {
        "type": "string"
      },
      "events": [
        {
          "name": "DeleteListingEvent",
          "args": [
            {
              "name": "listing",
              "type": "(uint64,uint64,uint64,byte[13],string)"
            }
          ],
          "desc": "Defines an ARC-28 event to be emitted by the deleteListing method that\ncontains the listing which was deleted by an admin for inappropriate content"
        }
      ],
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "setAdminToken",
      "desc": "Stores an ASA ID in global state that will control administration rights",
      "args": [
        {
          "name": "asaID",
          "type": "uint64",
          "desc": "The Asset ID of the ASA to be the admin token"
        }
      ],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "updateApplication",
      "desc": "Enables the application to be updated by the creator",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "UpdateApplication"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "events": [
    {
      "name": "CreateListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the createListing method that\ncontains the listing which was created for an NFD segment of directory.algo"
    },
    {
      "name": "RefreshListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the refreshListing method that\ncontains the listing which was refreshed"
    },
    {
      "name": "AbandonListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the abandonListing method that\ncontains the listing which was abandoned"
    },
    {
      "name": "RemoveTransferredListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the removeTransferredListing method that\ncontains the listing which was removed after the NFD was transferred"
    },
    {
      "name": "DeleteListingEvent",
      "args": [
        {
          "name": "listing",
          "type": "(uint64,uint64,uint64,byte[13],string)"
        }
      ],
      "desc": "Defines an ARC-28 event to be emitted by the deleteListing method that\ncontains the listing which was deleted by an admin for inappropriate content"
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Listing": [
      {
        "name": "timestamp",
        "type": "uint64"
      },
      {
        "name": "vouchAmount",
        "type": "uint64"
      },
      {
        "name": "nfdAppID",
        "type": "uint64"
      },
      {
        "name": "tags",
        "type": "byte[13]"
      },
      {
        "name": "name",
        "type": "string"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 1
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "adminToken": {
          "key": "YWRtaW5Ub2tlbg==",
          "keyType": "AVMBytes",
          "valueType": "uint64"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "listedNFDappIDs": {
          "keyType": "uint64",
          "valueType": "Listing"
        },
        "listings": {
          "keyType": "Listing",
          "valueType": "address"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 15,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1,
            2
          ]
        },
        {
          "teal": 16,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            3
          ]
        },
        {
          "teal": 17,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            4
          ]
        },
        {
          "teal": 18,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            5
          ]
        },
        {
          "teal": 19,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            6,
            7
          ]
        },
        {
          "teal": 20,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            8
          ]
        },
        {
          "teal": 21,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34
          ]
        },
        {
          "teal": 25,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            35
          ]
        },
        {
          "teal": 29,
          "source": "contracts/AlgoDirectory.algo.ts:35",
          "pc": [
            36,
            37,
            38
          ]
        },
        {
          "teal": 32,
          "source": "contracts/AlgoDirectory.algo.ts:35",
          "pc": [
            39
          ]
        },
        {
          "teal": 36,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "pc": [
            40,
            41
          ]
        },
        {
          "teal": 37,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "pc": [
            42
          ]
        },
        {
          "teal": 38,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "pc": [
            43,
            44
          ]
        },
        {
          "teal": 42,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [
            45,
            46
          ]
        },
        {
          "teal": 43,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "pc": [
            47,
            48
          ]
        },
        {
          "teal": 44,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "pc": [
            49
          ]
        },
        {
          "teal": 47,
          "source": "contracts/AlgoDirectory.algo.ts:36",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            50
          ]
        },
        {
          "teal": 48,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [
            51
          ]
        },
        {
          "teal": 51,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [
            52
          ]
        },
        {
          "teal": 52,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "pc": [
            53
          ]
        },
        {
          "teal": 55,
          "source": "contracts/AlgoDirectory.algo.ts:37",
          "errorMessage": "Caller must be listing owner",
          "pc": [
            54
          ]
        },
        {
          "teal": 56,
          "source": "contracts/AlgoDirectory.algo.ts:35",
          "pc": [
            55
          ]
        },
        {
          "teal": 60,
          "source": "contracts/AlgoDirectory.algo.ts:40",
          "pc": [
            56,
            57,
            58
          ]
        },
        {
          "teal": 67,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            59,
            60
          ]
        },
        {
          "teal": 68,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75
          ]
        },
        {
          "teal": 69,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            76
          ]
        },
        {
          "teal": 72,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.parentAppID')",
          "pc": [
            77
          ]
        },
        {
          "teal": 73,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            78
          ]
        },
        {
          "teal": 74,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            79,
            80
          ]
        },
        {
          "teal": 75,
          "source": "contracts/AlgoDirectory.algo.ts:43",
          "pc": [
            81
          ]
        },
        {
          "teal": 78,
          "source": "contracts/AlgoDirectory.algo.ts:42",
          "errorMessage": "NFD must be a segment of directory.algo",
          "pc": [
            82
          ]
        },
        {
          "teal": 79,
          "source": "contracts/AlgoDirectory.algo.ts:40",
          "pc": [
            83
          ]
        },
        {
          "teal": 83,
          "source": "contracts/AlgoDirectory.algo.ts:48",
          "pc": [
            84,
            85,
            86
          ]
        },
        {
          "teal": 90,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "pc": [
            87,
            88
          ]
        },
        {
          "teal": 91,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "pc": [
            89,
            90
          ]
        },
        {
          "teal": 92,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "pc": [
            91,
            92
          ]
        },
        {
          "teal": 93,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "pc": [
            93
          ]
        },
        {
          "teal": 96,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.owner.a')",
          "pc": [
            94
          ]
        },
        {
          "teal": 97,
          "source": "contracts/AlgoDirectory.algo.ts:51",
          "pc": [
            95
          ]
        },
        {
          "teal": 100,
          "source": "contracts/AlgoDirectory.algo.ts:50",
          "errorMessage": "Listing creator must be the NFD app i.owner.a",
          "pc": [
            96
          ]
        },
        {
          "teal": 101,
          "source": "contracts/AlgoDirectory.algo.ts:48",
          "pc": [
            97
          ]
        },
        {
          "teal": 105,
          "source": "contracts/AlgoDirectory.algo.ts:56",
          "pc": [
            98,
            99,
            100
          ]
        },
        {
          "teal": 108,
          "source": "contracts/AlgoDirectory.algo.ts:56",
          "pc": [
            101
          ]
        },
        {
          "teal": 109,
          "source": "contracts/AlgoDirectory.algo.ts:56",
          "pc": [
            102,
            103
          ]
        },
        {
          "teal": 113,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [
            104,
            105
          ]
        },
        {
          "teal": 114,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [
            106
          ]
        },
        {
          "teal": 115,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [
            107,
            108
          ]
        },
        {
          "teal": 119,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [
            109,
            110
          ]
        },
        {
          "teal": 120,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "pc": [
            111
          ]
        },
        {
          "teal": 123,
          "source": "contracts/AlgoDirectory.algo.ts:58",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            112
          ]
        },
        {
          "teal": 124,
          "source": "contracts/AlgoDirectory.algo.ts:59",
          "pc": [
            113
          ]
        },
        {
          "teal": 127,
          "source": "contracts/AlgoDirectory.algo.ts:59",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [
            114
          ]
        },
        {
          "teal": 128,
          "source": "contracts/AlgoDirectory.algo.ts:59",
          "pc": [
            115,
            116
          ]
        },
        {
          "teal": 132,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [
            117,
            118
          ]
        },
        {
          "teal": 133,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [
            119,
            120
          ]
        },
        {
          "teal": 134,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [
            121
          ]
        },
        {
          "teal": 137,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.owner.a')",
          "pc": [
            122
          ]
        },
        {
          "teal": 138,
          "source": "contracts/AlgoDirectory.algo.ts:61",
          "pc": [
            123,
            124
          ]
        },
        {
          "teal": 142,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [
            125,
            126
          ]
        },
        {
          "teal": 143,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [
            127,
            128
          ]
        },
        {
          "teal": 144,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "pc": [
            129
          ]
        },
        {
          "teal": 147,
          "source": "contracts/AlgoDirectory.algo.ts:63",
          "errorMessage": "NFD owner must be different than the listing owner",
          "pc": [
            130
          ]
        },
        {
          "teal": 148,
          "source": "contracts/AlgoDirectory.algo.ts:56",
          "pc": [
            131
          ]
        },
        {
          "teal": 152,
          "source": "contracts/AlgoDirectory.algo.ts:66",
          "pc": [
            132,
            133,
            134
          ]
        },
        {
          "teal": 159,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            135,
            136
          ]
        },
        {
          "teal": 160,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            137,
            138
          ]
        },
        {
          "teal": 161,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156
          ]
        },
        {
          "teal": 162,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            157
          ]
        },
        {
          "teal": 165,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.expirationTime')",
          "pc": [
            158
          ]
        },
        {
          "teal": 166,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            159
          ]
        },
        {
          "teal": 167,
          "source": "contracts/AlgoDirectory.algo.ts:70",
          "pc": [
            160
          ]
        },
        {
          "teal": 170,
          "source": "contracts/AlgoDirectory.algo.ts:69",
          "errorMessage": "NFD segment must not be expired",
          "pc": [
            161
          ]
        },
        {
          "teal": 171,
          "source": "contracts/AlgoDirectory.algo.ts:66",
          "pc": [
            162
          ]
        },
        {
          "teal": 175,
          "source": "contracts/AlgoDirectory.algo.ts:75",
          "pc": [
            163,
            164,
            165
          ]
        },
        {
          "teal": 179,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            166,
            167
          ]
        },
        {
          "teal": 180,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178
          ]
        },
        {
          "teal": 181,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            179
          ]
        },
        {
          "teal": 182,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            180
          ]
        },
        {
          "teal": 183,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            181
          ]
        },
        {
          "teal": 184,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "pc": [
            182
          ]
        },
        {
          "teal": 187,
          "source": "contracts/AlgoDirectory.algo.ts:78",
          "errorMessage": "NFD segment must not be listed for sale",
          "pc": [
            183
          ]
        },
        {
          "teal": 188,
          "source": "contracts/AlgoDirectory.algo.ts:75",
          "pc": [
            184
          ]
        },
        {
          "teal": 192,
          "source": "contracts/AlgoDirectory.algo.ts:81",
          "pc": [
            185,
            186,
            187
          ]
        },
        {
          "teal": 196,
          "source": "contracts/AlgoDirectory.algo.ts:82",
          "pc": [
            188,
            189
          ]
        },
        {
          "teal": 197,
          "source": "contracts/AlgoDirectory.algo.ts:82",
          "pc": [
            190
          ]
        },
        {
          "teal": 198,
          "source": "contracts/AlgoDirectory.algo.ts:82",
          "pc": [
            191,
            192,
            193
          ]
        },
        {
          "teal": 199,
          "source": "contracts/AlgoDirectory.algo.ts:82",
          "pc": [
            194,
            195
          ]
        },
        {
          "teal": 200,
          "source": "contracts/AlgoDirectory.algo.ts:82",
          "pc": [
            196
          ]
        },
        {
          "teal": 201,
          "source": "contracts/AlgoDirectory.algo.ts:81",
          "pc": [
            197
          ]
        },
        {
          "teal": 206,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            198
          ]
        },
        {
          "teal": 209,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            199,
            200,
            201
          ]
        },
        {
          "teal": 210,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            202
          ]
        },
        {
          "teal": 211,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            203
          ]
        },
        {
          "teal": 212,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            204,
            205
          ]
        },
        {
          "teal": 213,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            206
          ]
        },
        {
          "teal": 216,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "errorMessage": "argument 0 (listingTags) for createListing must be a byte[13]",
          "pc": [
            207
          ]
        },
        {
          "teal": 219,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            208,
            209,
            210
          ]
        },
        {
          "teal": 220,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            211
          ]
        },
        {
          "teal": 223,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            212,
            213
          ]
        },
        {
          "teal": 224,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            214
          ]
        },
        {
          "teal": 225,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            215
          ]
        },
        {
          "teal": 226,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            216
          ]
        },
        {
          "teal": 227,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            217,
            218
          ]
        },
        {
          "teal": 228,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            219
          ]
        },
        {
          "teal": 229,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            220
          ]
        },
        {
          "teal": 232,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "errorMessage": "argument 2 (collateralPayment) for createListing must be a pay transaction",
          "pc": [
            221
          ]
        },
        {
          "teal": 235,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            222,
            223,
            224
          ]
        },
        {
          "teal": 236,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            225
          ]
        },
        {
          "teal": 237,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            226
          ]
        },
        {
          "teal": 238,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            227
          ]
        },
        {
          "teal": 239,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            228
          ]
        },
        {
          "teal": 249,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            229,
            230,
            231
          ]
        },
        {
          "teal": 252,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            232
          ]
        },
        {
          "teal": 253,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            233,
            234
          ]
        },
        {
          "teal": 262,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [
            235,
            236
          ]
        },
        {
          "teal": 263,
          "source": "contracts/AlgoDirectory.algo.ts:103",
          "pc": [
            237,
            238
          ]
        },
        {
          "teal": 264,
          "source": "contracts/AlgoDirectory.algo.ts:103",
          "pc": [
            239,
            240
          ]
        },
        {
          "teal": 265,
          "source": "contracts/AlgoDirectory.algo.ts:103",
          "pc": [
            241
          ]
        },
        {
          "teal": 268,
          "source": "contracts/AlgoDirectory.algo.ts:103",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}",
          "pc": [
            242
          ]
        },
        {
          "teal": 271,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [
            243,
            244
          ]
        },
        {
          "teal": 272,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [
            245,
            246
          ]
        },
        {
          "teal": 273,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [
            247,
            248
          ]
        },
        {
          "teal": 274,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "pc": [
            249
          ]
        },
        {
          "teal": 277,
          "source": "contracts/AlgoDirectory.algo.ts:104",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}",
          "pc": [
            250
          ]
        },
        {
          "teal": 280,
          "source": "contracts/AlgoDirectory.algo.ts:102",
          "pc": [
            251,
            252
          ]
        },
        {
          "teal": 281,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "pc": [
            253,
            254
          ]
        },
        {
          "teal": 282,
          "source": "contracts/AlgoDirectory.algo.ts:13",
          "pc": [
            255,
            256,
            257,
            258
          ]
        },
        {
          "teal": 283,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "pc": [
            259
          ]
        },
        {
          "teal": 286,
          "source": "contracts/AlgoDirectory.algo.ts:105",
          "errorMessage": "transaction verification failed: {\"txn\":\"collateralPayment\",\"field\":\"amount\",\"condition\":\"greaterThanEqualTo\",\"expected\":\">=TOTAL_LISTING_BOXES_COST\"}",
          "pc": [
            260
          ]
        },
        {
          "teal": 290,
          "source": "contracts/AlgoDirectory.algo.ts:109",
          "pc": [
            261,
            262
          ]
        },
        {
          "teal": 291,
          "source": "contracts/AlgoDirectory.algo.ts:109",
          "pc": [
            263,
            264,
            265
          ]
        },
        {
          "teal": 295,
          "source": "contracts/AlgoDirectory.algo.ts:110",
          "pc": [
            266,
            267
          ]
        },
        {
          "teal": 296,
          "source": "contracts/AlgoDirectory.algo.ts:110",
          "pc": [
            268,
            269,
            270
          ]
        },
        {
          "teal": 300,
          "source": "contracts/AlgoDirectory.algo.ts:111",
          "pc": [
            271,
            272
          ]
        },
        {
          "teal": 301,
          "source": "contracts/AlgoDirectory.algo.ts:111",
          "pc": [
            273,
            274,
            275
          ]
        },
        {
          "teal": 305,
          "source": "contracts/AlgoDirectory.algo.ts:112",
          "pc": [
            276,
            277
          ]
        },
        {
          "teal": 306,
          "source": "contracts/AlgoDirectory.algo.ts:112",
          "pc": [
            278,
            279,
            280
          ]
        },
        {
          "teal": 310,
          "source": "contracts/AlgoDirectory.algo.ts:115",
          "pc": [
            281,
            282
          ]
        },
        {
          "teal": 311,
          "source": "contracts/AlgoDirectory.algo.ts:115",
          "pc": [
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290
          ]
        },
        {
          "teal": 312,
          "source": "contracts/AlgoDirectory.algo.ts:115",
          "pc": [
            291
          ]
        },
        {
          "teal": 315,
          "source": "contracts/AlgoDirectory.algo.ts:115",
          "errorMessage": "global state value does not exist: nfdAppID.globalState('i.name')",
          "pc": [
            292
          ]
        },
        {
          "teal": 316,
          "source": "contracts/AlgoDirectory.algo.ts:115",
          "pc": [
            293,
            294
          ]
        },
        {
          "teal": 324,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [
            295
          ]
        },
        {
          "teal": 325,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [
            296
          ]
        },
        {
          "teal": 326,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [
            297,
            298
          ]
        },
        {
          "teal": 330,
          "source": "contracts/AlgoDirectory.algo.ts:118",
          "pc": [
            299,
            300
          ]
        },
        {
          "teal": 331,
          "source": "contracts/AlgoDirectory.algo.ts:118",
          "pc": [
            301,
            302
          ]
        },
        {
          "teal": 335,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322
          ]
        },
        {
          "teal": 336,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            323,
            324
          ]
        },
        {
          "teal": 337,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            325,
            326
          ]
        },
        {
          "teal": 338,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            327,
            328
          ]
        },
        {
          "teal": 339,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            329,
            330
          ]
        },
        {
          "teal": 340,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            331
          ]
        },
        {
          "teal": 341,
          "source": "contracts/AlgoDirectory.algo.ts:119",
          "pc": [
            332,
            333
          ]
        },
        {
          "teal": 345,
          "source": "contracts/AlgoDirectory.algo.ts:120",
          "pc": [
            334
          ]
        },
        {
          "teal": 346,
          "source": "contracts/AlgoDirectory.algo.ts:120",
          "pc": [
            335,
            336
          ]
        },
        {
          "teal": 349,
          "source": "contracts/AlgoDirectory.algo.ts:117",
          "pc": [
            337
          ]
        },
        {
          "teal": 353,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [
            338,
            339
          ]
        },
        {
          "teal": 354,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [
            340
          ]
        },
        {
          "teal": 355,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [
            341
          ]
        },
        {
          "teal": 356,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "pc": [
            342
          ]
        },
        {
          "teal": 359,
          "source": "contracts/AlgoDirectory.algo.ts:122",
          "errorMessage": "NFD app ID must be valid at the NFD registry",
          "pc": [
            343
          ]
        },
        {
          "teal": 363,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            344,
            345
          ]
        },
        {
          "teal": 364,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            346
          ]
        },
        {
          "teal": 365,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            347
          ]
        },
        {
          "teal": 366,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            348
          ]
        },
        {
          "teal": 367,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            349
          ]
        },
        {
          "teal": 368,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "pc": [
            350
          ]
        },
        {
          "teal": 371,
          "source": "contracts/AlgoDirectory.algo.ts:125",
          "errorMessage": "Listing for this NFD must not already exist",
          "pc": [
            351
          ]
        },
        {
          "teal": 375,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            352,
            353
          ]
        },
        {
          "teal": 376,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            354
          ]
        },
        {
          "teal": 377,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            355,
            356
          ]
        },
        {
          "teal": 378,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            357
          ]
        },
        {
          "teal": 379,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            358,
            359
          ]
        },
        {
          "teal": 380,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            360
          ]
        },
        {
          "teal": 381,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            361
          ]
        },
        {
          "teal": 382,
          "source": "contracts/AlgoDirectory.algo.ts:128",
          "pc": [
            362,
            363
          ]
        },
        {
          "teal": 392,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            364
          ]
        },
        {
          "teal": 393,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            365
          ]
        },
        {
          "teal": 394,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            366,
            367
          ]
        },
        {
          "teal": 395,
          "source": "contracts/AlgoDirectory.algo.ts:131",
          "pc": [
            368,
            369,
            370
          ]
        },
        {
          "teal": 396,
          "source": "contracts/AlgoDirectory.algo.ts:131",
          "pc": [
            371
          ]
        },
        {
          "teal": 397,
          "source": "contracts/AlgoDirectory.algo.ts:131",
          "pc": [
            372,
            373,
            374
          ]
        },
        {
          "teal": 398,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [
            375,
            376
          ]
        },
        {
          "teal": 399,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [
            377,
            378
          ]
        },
        {
          "teal": 400,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [
            379
          ]
        },
        {
          "teal": 401,
          "source": "contracts/AlgoDirectory.algo.ts:132",
          "pc": [
            380,
            381,
            382
          ]
        },
        {
          "teal": 402,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [
            383,
            384
          ]
        },
        {
          "teal": 403,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [
            385
          ]
        },
        {
          "teal": 404,
          "source": "contracts/AlgoDirectory.algo.ts:133",
          "pc": [
            386,
            387,
            388
          ]
        },
        {
          "teal": 405,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [
            389,
            390
          ]
        },
        {
          "teal": 406,
          "source": "contracts/AlgoDirectory.algo.ts:134",
          "pc": [
            391,
            392,
            393
          ]
        },
        {
          "teal": 407,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            394,
            395
          ]
        },
        {
          "teal": 408,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            396
          ]
        },
        {
          "teal": 409,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            397
          ]
        },
        {
          "teal": 410,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            398
          ]
        },
        {
          "teal": 411,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            399,
            400,
            401
          ]
        },
        {
          "teal": 412,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            402
          ]
        },
        {
          "teal": 413,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            403
          ]
        },
        {
          "teal": 414,
          "source": "contracts/AlgoDirectory.algo.ts:135",
          "pc": [
            404,
            405,
            406
          ]
        },
        {
          "teal": 415,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            407
          ]
        },
        {
          "teal": 416,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            408
          ]
        },
        {
          "teal": 417,
          "source": "contracts/AlgoDirectory.algo.ts:130",
          "pc": [
            409,
            410
          ]
        },
        {
          "teal": 421,
          "source": "contracts/AlgoDirectory.algo.ts:139",
          "pc": [
            411,
            412
          ]
        },
        {
          "teal": 422,
          "source": "contracts/AlgoDirectory.algo.ts:139",
          "pc": [
            413,
            414
          ]
        },
        {
          "teal": 423,
          "source": "contracts/AlgoDirectory.algo.ts:139",
          "pc": [
            415
          ]
        },
        {
          "teal": 427,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            416,
            417
          ]
        },
        {
          "teal": 428,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            418
          ]
        },
        {
          "teal": 429,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            419
          ]
        },
        {
          "teal": 430,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            420
          ]
        },
        {
          "teal": 431,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            421
          ]
        },
        {
          "teal": 432,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            422,
            423
          ]
        },
        {
          "teal": 433,
          "source": "contracts/AlgoDirectory.algo.ts:142",
          "pc": [
            424
          ]
        },
        {
          "teal": 439,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            425,
            426,
            427,
            428,
            429,
            430
          ]
        },
        {
          "teal": 440,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            431
          ]
        },
        {
          "teal": 441,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            432
          ]
        },
        {
          "teal": 442,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            433
          ]
        },
        {
          "teal": 443,
          "source": "contracts/AlgoDirectory.algo.ts:146",
          "pc": [
            434,
            435
          ]
        },
        {
          "teal": 444,
          "source": "contracts/AlgoDirectory.algo.ts:146",
          "pc": [
            436,
            437,
            438
          ]
        },
        {
          "teal": 445,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            439
          ]
        },
        {
          "teal": 446,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            440
          ]
        },
        {
          "teal": 447,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            441
          ]
        },
        {
          "teal": 448,
          "source": "contracts/AlgoDirectory.algo.ts:145",
          "pc": [
            442
          ]
        },
        {
          "teal": 452,
          "source": "contracts/AlgoDirectory.algo.ts:150",
          "pc": [
            443,
            444
          ]
        },
        {
          "teal": 455,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            445,
            446
          ]
        },
        {
          "teal": 458,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            447,
            448
          ]
        },
        {
          "teal": 459,
          "source": "contracts/AlgoDirectory.algo.ts:100",
          "pc": [
            449
          ]
        },
        {
          "teal": 464,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            450
          ]
        },
        {
          "teal": 467,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            451,
            452,
            453
          ]
        },
        {
          "teal": 468,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            454
          ]
        },
        {
          "teal": 469,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            455
          ]
        },
        {
          "teal": 470,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            456,
            457
          ]
        },
        {
          "teal": 471,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            458
          ]
        },
        {
          "teal": 474,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "errorMessage": "argument 0 (listingTags) for refreshListing must be a byte[13]",
          "pc": [
            459
          ]
        },
        {
          "teal": 477,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            460,
            461,
            462
          ]
        },
        {
          "teal": 478,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            463
          ]
        },
        {
          "teal": 481,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            464,
            465,
            466
          ]
        },
        {
          "teal": 482,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            467
          ]
        },
        {
          "teal": 483,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            468
          ]
        },
        {
          "teal": 484,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            469
          ]
        },
        {
          "teal": 485,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            470
          ]
        },
        {
          "teal": 494,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            471,
            472,
            473
          ]
        },
        {
          "teal": 497,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            474
          ]
        },
        {
          "teal": 498,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            475
          ]
        },
        {
          "teal": 502,
          "source": "contracts/AlgoDirectory.algo.ts:173",
          "pc": [
            476,
            477
          ]
        },
        {
          "teal": 503,
          "source": "contracts/AlgoDirectory.algo.ts:173",
          "pc": [
            478,
            479,
            480
          ]
        },
        {
          "teal": 507,
          "source": "contracts/AlgoDirectory.algo.ts:174",
          "pc": [
            481,
            482
          ]
        },
        {
          "teal": 508,
          "source": "contracts/AlgoDirectory.algo.ts:174",
          "pc": [
            483,
            484,
            485
          ]
        },
        {
          "teal": 512,
          "source": "contracts/AlgoDirectory.algo.ts:175",
          "pc": [
            486,
            487
          ]
        },
        {
          "teal": 513,
          "source": "contracts/AlgoDirectory.algo.ts:175",
          "pc": [
            488,
            489,
            490
          ]
        },
        {
          "teal": 517,
          "source": "contracts/AlgoDirectory.algo.ts:176",
          "pc": [
            491,
            492
          ]
        },
        {
          "teal": 518,
          "source": "contracts/AlgoDirectory.algo.ts:176",
          "pc": [
            493,
            494,
            495
          ]
        },
        {
          "teal": 522,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            496,
            497
          ]
        },
        {
          "teal": 523,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            498
          ]
        },
        {
          "teal": 524,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            499,
            500
          ]
        },
        {
          "teal": 534,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            501
          ]
        },
        {
          "teal": 535,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            502
          ]
        },
        {
          "teal": 536,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            503,
            504
          ]
        },
        {
          "teal": 537,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [
            505,
            506,
            507
          ]
        },
        {
          "teal": 538,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [
            508
          ]
        },
        {
          "teal": 539,
          "source": "contracts/AlgoDirectory.algo.ts:181",
          "pc": [
            509,
            510,
            511
          ]
        },
        {
          "teal": 540,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            512,
            513
          ]
        },
        {
          "teal": 541,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            514
          ]
        },
        {
          "teal": 544,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            515
          ]
        },
        {
          "teal": 545,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            516,
            517
          ]
        },
        {
          "teal": 546,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            518,
            519
          ]
        },
        {
          "teal": 547,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            520,
            521,
            522
          ]
        },
        {
          "teal": 548,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            523
          ]
        },
        {
          "teal": 549,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            524
          ]
        },
        {
          "teal": 550,
          "source": "contracts/AlgoDirectory.algo.ts:182",
          "pc": [
            525,
            526,
            527
          ]
        },
        {
          "teal": 551,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            528,
            529
          ]
        },
        {
          "teal": 552,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            530
          ]
        },
        {
          "teal": 555,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            531
          ]
        },
        {
          "teal": 556,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            532,
            533
          ]
        },
        {
          "teal": 557,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            534,
            535
          ]
        },
        {
          "teal": 558,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            536,
            537,
            538
          ]
        },
        {
          "teal": 559,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            539
          ]
        },
        {
          "teal": 560,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            540
          ]
        },
        {
          "teal": 561,
          "source": "contracts/AlgoDirectory.algo.ts:183",
          "pc": [
            541,
            542,
            543
          ]
        },
        {
          "teal": 562,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [
            544,
            545
          ]
        },
        {
          "teal": 563,
          "source": "contracts/AlgoDirectory.algo.ts:184",
          "pc": [
            546,
            547,
            548
          ]
        },
        {
          "teal": 564,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            549,
            550
          ]
        },
        {
          "teal": 565,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            551
          ]
        },
        {
          "teal": 568,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            552
          ]
        },
        {
          "teal": 569,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            553,
            554
          ]
        },
        {
          "teal": 570,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            555,
            556
          ]
        },
        {
          "teal": 571,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            557,
            558
          ]
        },
        {
          "teal": 572,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            559,
            560
          ]
        },
        {
          "teal": 573,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            561,
            562
          ]
        },
        {
          "teal": 574,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            563
          ]
        },
        {
          "teal": 575,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            564
          ]
        },
        {
          "teal": 576,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            565,
            566
          ]
        },
        {
          "teal": 577,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            567
          ]
        },
        {
          "teal": 578,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            568
          ]
        },
        {
          "teal": 579,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            569
          ]
        },
        {
          "teal": 580,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            570
          ]
        },
        {
          "teal": 581,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            571
          ]
        },
        {
          "teal": 582,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            572
          ]
        },
        {
          "teal": 583,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            573
          ]
        },
        {
          "teal": 584,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            574,
            575,
            576
          ]
        },
        {
          "teal": 585,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            577
          ]
        },
        {
          "teal": 586,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            578
          ]
        },
        {
          "teal": 587,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            579
          ]
        },
        {
          "teal": 588,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            580,
            581,
            582
          ]
        },
        {
          "teal": 589,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            583
          ]
        },
        {
          "teal": 590,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            584
          ]
        },
        {
          "teal": 591,
          "source": "contracts/AlgoDirectory.algo.ts:185",
          "pc": [
            585,
            586,
            587
          ]
        },
        {
          "teal": 592,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            588
          ]
        },
        {
          "teal": 593,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            589
          ]
        },
        {
          "teal": 594,
          "source": "contracts/AlgoDirectory.algo.ts:180",
          "pc": [
            590,
            591
          ]
        },
        {
          "teal": 598,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            592,
            593
          ]
        },
        {
          "teal": 599,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "pc": [
            594
          ]
        },
        {
          "teal": 602,
          "source": "contracts/AlgoDirectory.algo.ts:179",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            595
          ]
        },
        {
          "teal": 603,
          "source": "contracts/AlgoDirectory.algo.ts:189",
          "pc": [
            596
          ]
        },
        {
          "teal": 607,
          "source": "contracts/AlgoDirectory.algo.ts:192",
          "pc": [
            597,
            598
          ]
        },
        {
          "teal": 608,
          "source": "contracts/AlgoDirectory.algo.ts:192",
          "pc": [
            599,
            600
          ]
        },
        {
          "teal": 609,
          "source": "contracts/AlgoDirectory.algo.ts:192",
          "pc": [
            601
          ]
        },
        {
          "teal": 613,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            602,
            603
          ]
        },
        {
          "teal": 614,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            604
          ]
        },
        {
          "teal": 615,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            605
          ]
        },
        {
          "teal": 616,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            606
          ]
        },
        {
          "teal": 617,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            607
          ]
        },
        {
          "teal": 618,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            608,
            609
          ]
        },
        {
          "teal": 619,
          "source": "contracts/AlgoDirectory.algo.ts:195",
          "pc": [
            610
          ]
        },
        {
          "teal": 625,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            611,
            612,
            613,
            614,
            615,
            616
          ]
        },
        {
          "teal": 626,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            617
          ]
        },
        {
          "teal": 627,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            618
          ]
        },
        {
          "teal": 628,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            619
          ]
        },
        {
          "teal": 629,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [
            620,
            621
          ]
        },
        {
          "teal": 630,
          "source": "contracts/AlgoDirectory.algo.ts:199",
          "pc": [
            622,
            623,
            624
          ]
        },
        {
          "teal": 631,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            625
          ]
        },
        {
          "teal": 632,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            626
          ]
        },
        {
          "teal": 633,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            627
          ]
        },
        {
          "teal": 634,
          "source": "contracts/AlgoDirectory.algo.ts:198",
          "pc": [
            628
          ]
        },
        {
          "teal": 638,
          "source": "contracts/AlgoDirectory.algo.ts:202",
          "pc": [
            629,
            630
          ]
        },
        {
          "teal": 641,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            631,
            632
          ]
        },
        {
          "teal": 644,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            633,
            634
          ]
        },
        {
          "teal": 645,
          "source": "contracts/AlgoDirectory.algo.ts:167",
          "pc": [
            635
          ]
        },
        {
          "teal": 650,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            636,
            637,
            638
          ]
        },
        {
          "teal": 651,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            639
          ]
        },
        {
          "teal": 654,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            640,
            641,
            642
          ]
        },
        {
          "teal": 655,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            643
          ]
        },
        {
          "teal": 656,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            644
          ]
        },
        {
          "teal": 664,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            645,
            646,
            647
          ]
        },
        {
          "teal": 667,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            648
          ]
        },
        {
          "teal": 671,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            649,
            650
          ]
        },
        {
          "teal": 672,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            651
          ]
        },
        {
          "teal": 673,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            652,
            653
          ]
        },
        {
          "teal": 677,
          "source": "contracts/AlgoDirectory.algo.ts:223",
          "pc": [
            654,
            655
          ]
        },
        {
          "teal": 678,
          "source": "contracts/AlgoDirectory.algo.ts:223",
          "pc": [
            656,
            657,
            658
          ]
        },
        {
          "teal": 687,
          "source": "contracts/AlgoDirectory.algo.ts:226",
          "pc": [
            659
          ]
        },
        {
          "teal": 688,
          "source": "contracts/AlgoDirectory.algo.ts:226",
          "pc": [
            660
          ]
        },
        {
          "teal": 689,
          "source": "contracts/AlgoDirectory.algo.ts:226",
          "pc": [
            661,
            662
          ]
        },
        {
          "teal": 693,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [
            663,
            664
          ]
        },
        {
          "teal": 694,
          "source": "contracts/AlgoDirectory.algo.ts:227",
          "pc": [
            665,
            666
          ]
        },
        {
          "teal": 698,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            667,
            668
          ]
        },
        {
          "teal": 699,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            669
          ]
        },
        {
          "teal": 702,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            670
          ]
        },
        {
          "teal": 703,
          "source": "contracts/AlgoDirectory.algo.ts:228",
          "pc": [
            671
          ]
        },
        {
          "teal": 706,
          "source": "contracts/AlgoDirectory.algo.ts:228",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [
            672
          ]
        },
        {
          "teal": 707,
          "source": "contracts/AlgoDirectory.algo.ts:228",
          "pc": [
            673,
            674
          ]
        },
        {
          "teal": 711,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            675,
            676
          ]
        },
        {
          "teal": 712,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            677
          ]
        },
        {
          "teal": 715,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            678
          ]
        },
        {
          "teal": 716,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [
            679,
            680
          ]
        },
        {
          "teal": 717,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [
            681,
            682
          ]
        },
        {
          "teal": 718,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [
            683,
            684,
            685
          ]
        },
        {
          "teal": 719,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [
            686
          ]
        },
        {
          "teal": 720,
          "source": "contracts/AlgoDirectory.algo.ts:229",
          "pc": [
            687,
            688
          ]
        },
        {
          "teal": 724,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [
            689
          ]
        },
        {
          "teal": 725,
          "source": "contracts/AlgoDirectory.algo.ts:230",
          "pc": [
            690,
            691
          ]
        },
        {
          "teal": 728,
          "source": "contracts/AlgoDirectory.algo.ts:226",
          "pc": [
            692
          ]
        },
        {
          "teal": 734,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            693,
            694,
            695,
            696,
            697,
            698
          ]
        },
        {
          "teal": 735,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            699
          ]
        },
        {
          "teal": 736,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            700
          ]
        },
        {
          "teal": 737,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            701
          ]
        },
        {
          "teal": 738,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            702,
            703
          ]
        },
        {
          "teal": 739,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            704
          ]
        },
        {
          "teal": 742,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            705
          ]
        },
        {
          "teal": 743,
          "source": "contracts/AlgoDirectory.algo.ts:235",
          "pc": [
            706,
            707,
            708
          ]
        },
        {
          "teal": 744,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            709
          ]
        },
        {
          "teal": 745,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            710
          ]
        },
        {
          "teal": 746,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            711
          ]
        },
        {
          "teal": 747,
          "source": "contracts/AlgoDirectory.algo.ts:234",
          "pc": [
            712
          ]
        },
        {
          "teal": 751,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            713,
            714
          ]
        },
        {
          "teal": 752,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "pc": [
            715
          ]
        },
        {
          "teal": 755,
          "source": "contracts/AlgoDirectory.algo.ts:218",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            716
          ]
        },
        {
          "teal": 756,
          "source": "contracts/AlgoDirectory.algo.ts:239",
          "pc": [
            717
          ]
        },
        {
          "teal": 760,
          "source": "contracts/AlgoDirectory.algo.ts:240",
          "pc": [
            718,
            719
          ]
        },
        {
          "teal": 761,
          "source": "contracts/AlgoDirectory.algo.ts:240",
          "pc": [
            720
          ]
        },
        {
          "teal": 762,
          "source": "contracts/AlgoDirectory.algo.ts:240",
          "pc": [
            721
          ]
        },
        {
          "teal": 763,
          "source": "contracts/AlgoDirectory.algo.ts:217",
          "pc": [
            722
          ]
        },
        {
          "teal": 768,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            723,
            724,
            725
          ]
        },
        {
          "teal": 769,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            726
          ]
        },
        {
          "teal": 772,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            727,
            728,
            729
          ]
        },
        {
          "teal": 773,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            730
          ]
        },
        {
          "teal": 774,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            731
          ]
        },
        {
          "teal": 783,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            732,
            733,
            734
          ]
        },
        {
          "teal": 786,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            735
          ]
        },
        {
          "teal": 790,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            736,
            737
          ]
        },
        {
          "teal": 791,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            738
          ]
        },
        {
          "teal": 792,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            739,
            740
          ]
        },
        {
          "teal": 796,
          "source": "contracts/AlgoDirectory.algo.ts:260",
          "pc": [
            741,
            742
          ]
        },
        {
          "teal": 797,
          "source": "contracts/AlgoDirectory.algo.ts:260",
          "pc": [
            743,
            744,
            745
          ]
        },
        {
          "teal": 806,
          "source": "contracts/AlgoDirectory.algo.ts:263",
          "pc": [
            746
          ]
        },
        {
          "teal": 807,
          "source": "contracts/AlgoDirectory.algo.ts:263",
          "pc": [
            747
          ]
        },
        {
          "teal": 808,
          "source": "contracts/AlgoDirectory.algo.ts:263",
          "pc": [
            748,
            749
          ]
        },
        {
          "teal": 812,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [
            750,
            751
          ]
        },
        {
          "teal": 813,
          "source": "contracts/AlgoDirectory.algo.ts:264",
          "pc": [
            752,
            753
          ]
        },
        {
          "teal": 817,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            754,
            755
          ]
        },
        {
          "teal": 818,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            756
          ]
        },
        {
          "teal": 821,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            757
          ]
        },
        {
          "teal": 822,
          "source": "contracts/AlgoDirectory.algo.ts:265",
          "pc": [
            758
          ]
        },
        {
          "teal": 825,
          "source": "contracts/AlgoDirectory.algo.ts:265",
          "errorMessage": "box value does not exist: this.listings(listingKey).value",
          "pc": [
            759
          ]
        },
        {
          "teal": 826,
          "source": "contracts/AlgoDirectory.algo.ts:265",
          "pc": [
            760,
            761
          ]
        },
        {
          "teal": 830,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            762,
            763
          ]
        },
        {
          "teal": 831,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            764
          ]
        },
        {
          "teal": 834,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            765
          ]
        },
        {
          "teal": 835,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [
            766,
            767
          ]
        },
        {
          "teal": 836,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [
            768,
            769
          ]
        },
        {
          "teal": 837,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [
            770,
            771,
            772
          ]
        },
        {
          "teal": 838,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [
            773
          ]
        },
        {
          "teal": 839,
          "source": "contracts/AlgoDirectory.algo.ts:266",
          "pc": [
            774,
            775
          ]
        },
        {
          "teal": 843,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [
            776
          ]
        },
        {
          "teal": 844,
          "source": "contracts/AlgoDirectory.algo.ts:267",
          "pc": [
            777,
            778
          ]
        },
        {
          "teal": 847,
          "source": "contracts/AlgoDirectory.algo.ts:263",
          "pc": [
            779
          ]
        },
        {
          "teal": 853,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            780,
            781,
            782,
            783,
            784,
            785
          ]
        },
        {
          "teal": 854,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            786
          ]
        },
        {
          "teal": 855,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            787
          ]
        },
        {
          "teal": 856,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            788
          ]
        },
        {
          "teal": 857,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            789,
            790
          ]
        },
        {
          "teal": 858,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            791
          ]
        },
        {
          "teal": 861,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            792
          ]
        },
        {
          "teal": 862,
          "source": "contracts/AlgoDirectory.algo.ts:272",
          "pc": [
            793,
            794,
            795
          ]
        },
        {
          "teal": 863,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            796
          ]
        },
        {
          "teal": 864,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            797
          ]
        },
        {
          "teal": 865,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            798
          ]
        },
        {
          "teal": 866,
          "source": "contracts/AlgoDirectory.algo.ts:271",
          "pc": [
            799
          ]
        },
        {
          "teal": 870,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            800,
            801
          ]
        },
        {
          "teal": 871,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "pc": [
            802
          ]
        },
        {
          "teal": 874,
          "source": "contracts/AlgoDirectory.algo.ts:257",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            803
          ]
        },
        {
          "teal": 875,
          "source": "contracts/AlgoDirectory.algo.ts:276",
          "pc": [
            804
          ]
        },
        {
          "teal": 879,
          "source": "contracts/AlgoDirectory.algo.ts:277",
          "pc": [
            805,
            806
          ]
        },
        {
          "teal": 880,
          "source": "contracts/AlgoDirectory.algo.ts:277",
          "pc": [
            807
          ]
        },
        {
          "teal": 881,
          "source": "contracts/AlgoDirectory.algo.ts:277",
          "pc": [
            808
          ]
        },
        {
          "teal": 882,
          "source": "contracts/AlgoDirectory.algo.ts:256",
          "pc": [
            809
          ]
        },
        {
          "teal": 887,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            810
          ]
        },
        {
          "teal": 890,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            811,
            812,
            813
          ]
        },
        {
          "teal": 891,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            814
          ]
        },
        {
          "teal": 894,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            815,
            816,
            817
          ]
        },
        {
          "teal": 895,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            818
          ]
        },
        {
          "teal": 896,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            819
          ]
        },
        {
          "teal": 897,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            820
          ]
        },
        {
          "teal": 898,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            821,
            822,
            823
          ]
        },
        {
          "teal": 899,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            824
          ]
        },
        {
          "teal": 900,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            825
          ]
        },
        {
          "teal": 901,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            826
          ]
        },
        {
          "teal": 902,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            827
          ]
        },
        {
          "teal": 903,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            828
          ]
        },
        {
          "teal": 904,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            829
          ]
        },
        {
          "teal": 912,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            830,
            831,
            832
          ]
        },
        {
          "teal": 915,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            833
          ]
        },
        {
          "teal": 916,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            834
          ]
        },
        {
          "teal": 920,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            835,
            836
          ]
        },
        {
          "teal": 921,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            837
          ]
        },
        {
          "teal": 922,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            838
          ]
        },
        {
          "teal": 923,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            839,
            840
          ]
        },
        {
          "teal": 924,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            841
          ]
        },
        {
          "teal": 925,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            842
          ]
        },
        {
          "teal": 926,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "pc": [
            843
          ]
        },
        {
          "teal": 929,
          "source": "contracts/AlgoDirectory.algo.ts:294",
          "errorMessage": "Caller must have the admin token",
          "pc": [
            844
          ]
        },
        {
          "teal": 933,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            845,
            846
          ]
        },
        {
          "teal": 934,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            847
          ]
        },
        {
          "teal": 935,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            848,
            849
          ]
        },
        {
          "teal": 939,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            850,
            851,
            852,
            853,
            854,
            855,
            856,
            857,
            858
          ]
        },
        {
          "teal": 940,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            859,
            860
          ]
        },
        {
          "teal": 941,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            861
          ]
        },
        {
          "teal": 944,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            862
          ]
        },
        {
          "teal": 945,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            863,
            864
          ]
        },
        {
          "teal": 946,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            865,
            866
          ]
        },
        {
          "teal": 947,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            867,
            868
          ]
        },
        {
          "teal": 948,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            869,
            870
          ]
        },
        {
          "teal": 949,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            871,
            872
          ]
        },
        {
          "teal": 950,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            873
          ]
        },
        {
          "teal": 951,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            874
          ]
        },
        {
          "teal": 952,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            875,
            876
          ]
        },
        {
          "teal": 953,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            877
          ]
        },
        {
          "teal": 954,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            878
          ]
        },
        {
          "teal": 955,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            879
          ]
        },
        {
          "teal": 956,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            880
          ]
        },
        {
          "teal": 957,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            881
          ]
        },
        {
          "teal": 958,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            882
          ]
        },
        {
          "teal": 959,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            883
          ]
        },
        {
          "teal": 960,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            884,
            885,
            886
          ]
        },
        {
          "teal": 961,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            887
          ]
        },
        {
          "teal": 962,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            888,
            889,
            890,
            891,
            892,
            893,
            894,
            895,
            896,
            897,
            898,
            899,
            900,
            901,
            902,
            903,
            904,
            905
          ]
        },
        {
          "teal": 963,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            906
          ]
        },
        {
          "teal": 964,
          "source": "contracts/AlgoDirectory.algo.ts:297",
          "pc": [
            907,
            908
          ]
        },
        {
          "teal": 974,
          "source": "contracts/AlgoDirectory.algo.ts:300",
          "pc": [
            909
          ]
        },
        {
          "teal": 975,
          "source": "contracts/AlgoDirectory.algo.ts:300",
          "pc": [
            910
          ]
        },
        {
          "teal": 976,
          "source": "contracts/AlgoDirectory.algo.ts:300",
          "pc": [
            911,
            912
          ]
        },
        {
          "teal": 980,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [
            913,
            914
          ]
        },
        {
          "teal": 981,
          "source": "contracts/AlgoDirectory.algo.ts:301",
          "pc": [
            915,
            916
          ]
        },
        {
          "teal": 985,
          "source": "contracts/AlgoDirectory.algo.ts:302",
          "pc": [
            917,
            918
          ]
        },
        {
          "teal": 986,
          "source": "contracts/AlgoDirectory.algo.ts:302",
          "pc": [
            919,
            920
          ]
        },
        {
          "teal": 990,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            921,
            922
          ]
        },
        {
          "teal": 991,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            923
          ]
        },
        {
          "teal": 994,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            924
          ]
        },
        {
          "teal": 995,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [
            925,
            926
          ]
        },
        {
          "teal": 996,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [
            927,
            928
          ]
        },
        {
          "teal": 997,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [
            929,
            930,
            931
          ]
        },
        {
          "teal": 998,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [
            932
          ]
        },
        {
          "teal": 999,
          "source": "contracts/AlgoDirectory.algo.ts:303",
          "pc": [
            933,
            934
          ]
        },
        {
          "teal": 1003,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [
            935
          ]
        },
        {
          "teal": 1004,
          "source": "contracts/AlgoDirectory.algo.ts:304",
          "pc": [
            936,
            937
          ]
        },
        {
          "teal": 1008,
          "source": "contracts/AlgoDirectory.algo.ts:305",
          "pc": [
            938,
            939
          ]
        },
        {
          "teal": 1009,
          "source": "contracts/AlgoDirectory.algo.ts:305",
          "pc": [
            940,
            941
          ]
        },
        {
          "teal": 1012,
          "source": "contracts/AlgoDirectory.algo.ts:300",
          "pc": [
            942
          ]
        },
        {
          "teal": 1018,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            943,
            944,
            945,
            946,
            947,
            948
          ]
        },
        {
          "teal": 1019,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            949
          ]
        },
        {
          "teal": 1020,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            950
          ]
        },
        {
          "teal": 1021,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            951
          ]
        },
        {
          "teal": 1022,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            952,
            953
          ]
        },
        {
          "teal": 1023,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            954
          ]
        },
        {
          "teal": 1026,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            955
          ]
        },
        {
          "teal": 1027,
          "source": "contracts/AlgoDirectory.algo.ts:310",
          "pc": [
            956,
            957,
            958
          ]
        },
        {
          "teal": 1028,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            959
          ]
        },
        {
          "teal": 1029,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            960
          ]
        },
        {
          "teal": 1030,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            961
          ]
        },
        {
          "teal": 1031,
          "source": "contracts/AlgoDirectory.algo.ts:309",
          "pc": [
            962
          ]
        },
        {
          "teal": 1035,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            963,
            964
          ]
        },
        {
          "teal": 1036,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "pc": [
            965
          ]
        },
        {
          "teal": 1039,
          "source": "contracts/AlgoDirectory.algo.ts:296",
          "errorMessage": "box value does not exist: this.listedNFDappIDs(nfdAppID).value",
          "pc": [
            966
          ]
        },
        {
          "teal": 1040,
          "source": "contracts/AlgoDirectory.algo.ts:314",
          "pc": [
            967
          ]
        },
        {
          "teal": 1044,
          "source": "contracts/AlgoDirectory.algo.ts:315",
          "pc": [
            968,
            969
          ]
        },
        {
          "teal": 1045,
          "source": "contracts/AlgoDirectory.algo.ts:315",
          "pc": [
            970
          ]
        },
        {
          "teal": 1046,
          "source": "contracts/AlgoDirectory.algo.ts:315",
          "pc": [
            971
          ]
        },
        {
          "teal": 1050,
          "source": "contracts/AlgoDirectory.algo.ts:317",
          "pc": [
            972,
            973
          ]
        },
        {
          "teal": 1053,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            974,
            975
          ]
        },
        {
          "teal": 1056,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            976,
            977
          ]
        },
        {
          "teal": 1057,
          "source": "contracts/AlgoDirectory.algo.ts:292",
          "pc": [
            978
          ]
        },
        {
          "teal": 1062,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            979,
            980,
            981
          ]
        },
        {
          "teal": 1063,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            982
          ]
        },
        {
          "teal": 1066,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            983,
            984,
            985
          ]
        },
        {
          "teal": 1067,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            986
          ]
        },
        {
          "teal": 1068,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            987
          ]
        },
        {
          "teal": 1076,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            988,
            989,
            990
          ]
        },
        {
          "teal": 1080,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [
            991,
            992
          ]
        },
        {
          "teal": 1081,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [
            993,
            994,
            995
          ]
        },
        {
          "teal": 1082,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [
            996,
            997
          ]
        },
        {
          "teal": 1083,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [
            998
          ]
        },
        {
          "teal": 1084,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "pc": [
            999
          ]
        },
        {
          "teal": 1087,
          "source": "contracts/AlgoDirectory.algo.ts:326",
          "errorMessage": "Only the creator can set the admin token",
          "pc": [
            1000
          ]
        },
        {
          "teal": 1091,
          "source": "contracts/AlgoDirectory.algo.ts:327",
          "pc": [
            1001
          ]
        },
        {
          "teal": 1092,
          "source": "contracts/AlgoDirectory.algo.ts:327",
          "pc": [
            1002,
            1003
          ]
        },
        {
          "teal": 1093,
          "source": "contracts/AlgoDirectory.algo.ts:327",
          "pc": [
            1004
          ]
        },
        {
          "teal": 1094,
          "source": "contracts/AlgoDirectory.algo.ts:325",
          "pc": [
            1005
          ]
        },
        {
          "teal": 1099,
          "source": "contracts/AlgoDirectory.algo.ts:334",
          "pc": [
            1006,
            1007,
            1008
          ]
        },
        {
          "teal": 1100,
          "source": "contracts/AlgoDirectory.algo.ts:334",
          "pc": [
            1009
          ]
        },
        {
          "teal": 1101,
          "source": "contracts/AlgoDirectory.algo.ts:334",
          "pc": [
            1010
          ]
        },
        {
          "teal": 1107,
          "source": "contracts/AlgoDirectory.algo.ts:334",
          "pc": [
            1011,
            1012,
            1013
          ]
        },
        {
          "teal": 1111,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "pc": [
            1014,
            1015
          ]
        },
        {
          "teal": 1112,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "pc": [
            1016,
            1017,
            1018
          ]
        },
        {
          "teal": 1113,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "pc": [
            1019,
            1020
          ]
        },
        {
          "teal": 1114,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "pc": [
            1021
          ]
        },
        {
          "teal": 1115,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "pc": [
            1022
          ]
        },
        {
          "teal": 1118,
          "source": "contracts/AlgoDirectory.algo.ts:335",
          "errorMessage": "Only the creator can update the application",
          "pc": [
            1023
          ]
        },
        {
          "teal": 1119,
          "source": "contracts/AlgoDirectory.algo.ts:334",
          "pc": [
            1024
          ]
        },
        {
          "teal": 1124,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [
            1025,
            1026,
            1027
          ]
        },
        {
          "teal": 1125,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [
            1028
          ]
        },
        {
          "teal": 1126,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [
            1029
          ]
        },
        {
          "teal": 1130,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [
            1030,
            1031,
            1032
          ]
        },
        {
          "teal": 1131,
          "source": "contracts/AlgoDirectory.algo.ts:338",
          "pc": [
            1033
          ]
        },
        {
          "teal": 1134,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1034,
            1035,
            1036,
            1037,
            1038,
            1039
          ]
        },
        {
          "teal": 1135,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1040,
            1041,
            1042
          ]
        },
        {
          "teal": 1136,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1043,
            1044,
            1045,
            1046
          ]
        },
        {
          "teal": 1139,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            1047
          ]
        },
        {
          "teal": 1142,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1048,
            1049,
            1050,
            1051,
            1052,
            1053
          ]
        },
        {
          "teal": 1143,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1054,
            1055,
            1056,
            1057,
            1058,
            1059
          ]
        },
        {
          "teal": 1144,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1060,
            1061,
            1062,
            1063,
            1064,
            1065
          ]
        },
        {
          "teal": 1145,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1066,
            1067,
            1068,
            1069,
            1070,
            1071
          ]
        },
        {
          "teal": 1146,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1072,
            1073,
            1074,
            1075,
            1076,
            1077
          ]
        },
        {
          "teal": 1147,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1078,
            1079,
            1080,
            1081,
            1082,
            1083
          ]
        },
        {
          "teal": 1148,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1084,
            1085,
            1086
          ]
        },
        {
          "teal": 1149,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1087,
            1088,
            1089,
            1090,
            1091,
            1092,
            1093,
            1094,
            1095,
            1096,
            1097,
            1098,
            1099,
            1100
          ]
        },
        {
          "teal": 1152,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            1101
          ]
        },
        {
          "teal": 1155,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1102,
            1103,
            1104,
            1105,
            1106,
            1107
          ]
        },
        {
          "teal": 1156,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1108,
            1109,
            1110
          ]
        },
        {
          "teal": 1157,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1111,
            1112,
            1113,
            1114
          ]
        },
        {
          "teal": 1160,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "errorMessage": "this contract does not implement the given ABI method for call UpdateApplication",
          "pc": [
            1115
          ]
        },
        {
          "teal": 1163,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1116,
            1117,
            1118
          ]
        },
        {
          "teal": 1164,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1119,
            1120
          ]
        },
        {
          "teal": 1165,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1121,
            1122
          ]
        },
        {
          "teal": 1166,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1123
          ]
        },
        {
          "teal": 1167,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1124,
            1125
          ]
        },
        {
          "teal": 1168,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1126,
            1127
          ]
        },
        {
          "teal": 1169,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1128
          ]
        },
        {
          "teal": 1172,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1129,
            1130,
            1131
          ]
        },
        {
          "teal": 1173,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1132,
            1133
          ]
        },
        {
          "teal": 1174,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1134,
            1135
          ]
        },
        {
          "teal": 1175,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1136
          ]
        },
        {
          "teal": 1176,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1137,
            1138
          ]
        },
        {
          "teal": 1177,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1139,
            1140
          ]
        },
        {
          "teal": 1178,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1141
          ]
        },
        {
          "teal": 1179,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1142
          ]
        },
        {
          "teal": 1180,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1143,
            1144
          ]
        },
        {
          "teal": 1181,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1145
          ]
        },
        {
          "teal": 1182,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1146
          ]
        },
        {
          "teal": 1183,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1147
          ]
        },
        {
          "teal": 1184,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1148,
            1149,
            1150
          ]
        },
        {
          "teal": 1185,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1151,
            1152
          ]
        },
        {
          "teal": 1186,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1153,
            1154
          ]
        },
        {
          "teal": 1187,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1155
          ]
        },
        {
          "teal": 1188,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1156
          ]
        },
        {
          "teal": 1189,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1157,
            1158
          ]
        },
        {
          "teal": 1190,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1159,
            1160
          ]
        },
        {
          "teal": 1191,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1161,
            1162
          ]
        },
        {
          "teal": 1192,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1163,
            1164
          ]
        },
        {
          "teal": 1193,
          "source": "contracts/AlgoDirectory.algo.ts:22",
          "pc": [
            1165
          ]
        }
      ],
      "pcOffsetMethod": "cblocks"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "feeSinkAddress": {
      "type": "address"
    },
    "directoryAppID": {
      "type": "uint64"
    },
    "nfdRegistryAppID": {
      "type": "uint64"
    }
  },
  "scratchVariables": {
    "feeSinkAddress": {
      "type": "address",
      "slot": 200
    },
    "directoryAppID": {
      "type": "uint64",
      "slot": 201
    },
    "nfdRegistryAppID": {
      "type": "uint64",
      "slot": 202
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}